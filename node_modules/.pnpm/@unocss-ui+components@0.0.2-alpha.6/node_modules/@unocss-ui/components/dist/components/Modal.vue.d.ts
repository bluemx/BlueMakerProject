declare const _default: __VLS_WithTemplateSlots<import("vue").DefineComponent<__VLS_WithDefaults<__VLS_TypePropsToRuntimeProps<{
    modelValue: boolean;
    dismissible?: boolean | undefined;
    dismissButton?: boolean | undefined;
    width?: "base" | "md" | "sm" | "lg" | "full" | "xl" | undefined;
    padded?: boolean | undefined;
    zIndex?: number | undefined;
}>, {
    dismissible: boolean;
    dismissButton: boolean;
    padded: boolean;
    width: string;
    zIndex: number;
}>, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {
    "update:modelValue": (value: boolean) => void;
    close: () => void;
}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<__VLS_WithDefaults<__VLS_TypePropsToRuntimeProps<{
    modelValue: boolean;
    dismissible?: boolean | undefined;
    dismissButton?: boolean | undefined;
    width?: "base" | "md" | "sm" | "lg" | "full" | "xl" | undefined;
    padded?: boolean | undefined;
    zIndex?: number | undefined;
}>, {
    dismissible: boolean;
    dismissButton: boolean;
    padded: boolean;
    width: string;
    zIndex: number;
}>>> & {
    onClose?: (() => any) | undefined;
    "onUpdate:modelValue"?: ((value: boolean) => any) | undefined;
}, {
    width: 'sm' | 'base' | 'md' | 'lg' | 'xl' | 'full';
    zIndex: number;
    dismissible: boolean;
    dismissButton: boolean;
    padded: boolean;
}>, {
    header?(_: {}): any;
    default?(_: {}): any;
    footer?(_: {}): any;
}>;
export default _default;
type __VLS_NonUndefinedable<T> = T extends undefined ? never : T;
type __VLS_TypePropsToRuntimeProps<T> = {
    [K in keyof T]-?: {} extends Pick<T, K> ? {
        type: import('vue').PropType<__VLS_NonUndefinedable<T[K]>>;
    } : {
        type: import('vue').PropType<T[K]>;
        required: true;
    };
};
type __VLS_WithDefaults<P, D> = {
    [K in keyof Pick<P, keyof P>]: K extends keyof D ? __VLS_Prettify<P[K] & {
        default: D[K];
    }> : P[K];
};
type __VLS_WithTemplateSlots<T, S> = T & {
    new (): {
        $slots: S;
    };
};
type __VLS_Prettify<T> = {
    [K in keyof T]: T[K];
} & {};
