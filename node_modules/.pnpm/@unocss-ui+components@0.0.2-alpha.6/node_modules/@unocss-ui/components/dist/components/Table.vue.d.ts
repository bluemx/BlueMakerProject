declare const _default: __VLS_WithTemplateSlots<import("vue").DefineComponent<__VLS_WithDefaults<__VLS_TypePropsToRuntimeProps<{
    data?: any[] | undefined;
    actions?: {
        name: string;
        clicked: Function;
    }[] | undefined;
    loading?: boolean | undefined;
    divided?: boolean | undefined;
    bordered?: boolean | undefined;
    striped?: boolean | undefined;
    tree?: boolean | undefined;
    headerColor?: boolean | undefined;
    rowKey?: string | undefined;
    defaultExpandAll?: boolean | undefined;
    rounded?: "md" | "sm" | "lg" | undefined;
    /**
     * auto: when all children are checked, parent will be checked
     *
     * check: when child is checked, parent will be checked
     *
     * uncheck: checking child will not affect parent
     **/
    associateParent?: "auto" | "check" | "uncheck" | undefined;
}>, {
    data: () => never[];
    actions: () => never[];
    loading: boolean;
    divided: boolean;
    bordered: boolean;
    striped: boolean;
    tree: boolean;
    headerColor: boolean;
    rowKey: string;
    defaultExpandAll: boolean;
    rounded: string;
    associateParent: string;
}>, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, ("hoverRow" | "clickRow")[], "hoverRow" | "clickRow", import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<__VLS_WithDefaults<__VLS_TypePropsToRuntimeProps<{
    data?: any[] | undefined;
    actions?: {
        name: string;
        clicked: Function;
    }[] | undefined;
    loading?: boolean | undefined;
    divided?: boolean | undefined;
    bordered?: boolean | undefined;
    striped?: boolean | undefined;
    tree?: boolean | undefined;
    headerColor?: boolean | undefined;
    rowKey?: string | undefined;
    defaultExpandAll?: boolean | undefined;
    rounded?: "md" | "sm" | "lg" | undefined;
    /**
     * auto: when all children are checked, parent will be checked
     *
     * check: when child is checked, parent will be checked
     *
     * uncheck: checking child will not affect parent
     **/
    associateParent?: "auto" | "check" | "uncheck" | undefined;
}>, {
    data: () => never[];
    actions: () => never[];
    loading: boolean;
    divided: boolean;
    bordered: boolean;
    striped: boolean;
    tree: boolean;
    headerColor: boolean;
    rowKey: string;
    defaultExpandAll: boolean;
    rounded: string;
    associateParent: string;
}>>> & {
    onHoverRow?: ((...args: any[]) => any) | undefined;
    onClickRow?: ((...args: any[]) => any) | undefined;
}, {
    bordered: boolean;
    data: Array<any>;
    rounded: 'sm' | 'md' | 'lg';
    tree: boolean;
    loading: boolean;
    actions: Array<{
        name: string;
        clicked: Function;
    }>;
    divided: boolean;
    striped: boolean;
    headerColor: boolean;
    rowKey: string;
    defaultExpandAll: boolean;
    associateParent: 'auto' | 'check' | 'uncheck';
}>, {
    top?(_: {}): any;
    bottom?(_: {}): any;
    headers?(_: {}): any;
    loading?(_: {}): any;
    empty?(_: {}): any;
    rows?(_: {
        row: any;
        index: number;
    }): any;
    subs?(_: {
        sub: any;
        index: number;
    }): any;
}>;
export default _default;
type __VLS_NonUndefinedable<T> = T extends undefined ? never : T;
type __VLS_TypePropsToRuntimeProps<T> = {
    [K in keyof T]-?: {} extends Pick<T, K> ? {
        type: import('vue').PropType<__VLS_NonUndefinedable<T[K]>>;
    } : {
        type: import('vue').PropType<T[K]>;
        required: true;
    };
};
type __VLS_WithDefaults<P, D> = {
    [K in keyof Pick<P, keyof P>]: K extends keyof D ? __VLS_Prettify<P[K] & {
        default: D[K];
    }> : P[K];
};
type __VLS_WithTemplateSlots<T, S> = T & {
    new (): {
        $slots: S;
    };
};
type __VLS_Prettify<T> = {
    [K in keyof T]: T[K];
} & {};
