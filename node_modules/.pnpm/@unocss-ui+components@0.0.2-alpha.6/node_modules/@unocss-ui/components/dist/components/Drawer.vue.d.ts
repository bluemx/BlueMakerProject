declare const _default: __VLS_WithTemplateSlots<import("vue").DefineComponent<__VLS_WithDefaults<__VLS_TypePropsToRuntimeProps<{
    modelValue?: boolean | undefined;
    placement?: "left" | "right" | "top" | "bottom" | undefined;
    width?: "md" | "sm" | "lg" | "1/2" | "1/3" | "1/4" | "full" | undefined;
    duration?: "200" | "100" | "300" | "400" | "500" | "600" | undefined;
}>, {
    modelValue: boolean;
    placement: string;
    duration: string;
    width: string;
    height: string;
}>, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, ("close" | "update:modelValue")[], "close" | "update:modelValue", import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<__VLS_WithDefaults<__VLS_TypePropsToRuntimeProps<{
    modelValue?: boolean | undefined;
    placement?: "left" | "right" | "top" | "bottom" | undefined;
    width?: "md" | "sm" | "lg" | "1/2" | "1/3" | "1/4" | "full" | undefined;
    duration?: "200" | "100" | "300" | "400" | "500" | "600" | undefined;
}>, {
    modelValue: boolean;
    placement: string;
    duration: string;
    width: string;
    height: string;
}>>> & {
    onClose?: ((...args: any[]) => any) | undefined;
    "onUpdate:modelValue"?: ((...args: any[]) => any) | undefined;
}, {
    modelValue: boolean;
    width: 'sm' | 'md' | 'lg' | '1/2' | '1/3' | '1/4' | 'full';
    placement: 'top' | 'right' | 'bottom' | 'left';
    duration: '100' | '200' | '300' | '400' | '500' | '600';
}>, {
    default?(_: {}): any;
}>;
export default _default;
type __VLS_NonUndefinedable<T> = T extends undefined ? never : T;
type __VLS_TypePropsToRuntimeProps<T> = {
    [K in keyof T]-?: {} extends Pick<T, K> ? {
        type: import('vue').PropType<__VLS_NonUndefinedable<T[K]>>;
    } : {
        type: import('vue').PropType<T[K]>;
        required: true;
    };
};
type __VLS_WithDefaults<P, D> = {
    [K in keyof Pick<P, keyof P>]: K extends keyof D ? __VLS_Prettify<P[K] & {
        default: D[K];
    }> : P[K];
};
type __VLS_WithTemplateSlots<T, S> = T & {
    new (): {
        $slots: S;
    };
};
type __VLS_Prettify<T> = {
    [K in keyof T]: T[K];
} & {};
