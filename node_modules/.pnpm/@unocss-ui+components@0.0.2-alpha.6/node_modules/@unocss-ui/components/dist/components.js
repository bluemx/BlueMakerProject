import { defineComponent as p, computed as x, openBlock as r, createElementBlock as u, mergeProps as z, createElementVNode as c, normalizeClass as g, unref as m, createCommentVNode as v, renderSlot as h, toDisplayString as w, createBlock as S, resolveDynamicComponent as D, withCtx as C, withDirectives as L, isRef as N, vModelCheckbox as te, ref as B, reactive as I, onMounted as W, normalizeStyle as H, watch as R, onUnmounted as pe, Teleport as re, nextTick as F, createVNode as T, Transition as _, Fragment as $, renderList as M, withModifiers as G, createTextVNode as A, withKeys as be, vModelText as we, pushScopeId as le, popScopeId as ae, vModelDynamic as $e, useSlots as de, h as ke, normalizeProps as Y, getCurrentScope as xe, onScopeDispose as Ve, toRef as Ce, readonly as Be, customRef as ze, vModelRadio as Se, createStaticVNode as ue, TransitionGroup as Me, provide as Ue, guardReactiveProps as Te } from "vue";
const Ie = { class: "flex" }, Le = { key: 0 }, Ae = {
  key: 0,
  class: "ml-2 h-6 w-6 flex items-center justify-center"
}, Ne = {
  name: "UAlert"
}, ce = /* @__PURE__ */ p({
  ...Ne,
  props: {
    type: { default: "primary" },
    icon: { default: "" },
    closeable: { type: Boolean, default: !1 },
    noIcon: { type: Boolean, default: !1 },
    colorful: { type: Boolean, default: !1 },
    bordered: { type: Boolean, default: !1 }
  },
  emits: ["close"],
  setup(e) {
    const i = e, l = x(() => {
      if (i.noIcon)
        return "";
      if (i.icon)
        return i.icon;
      switch (i.type) {
        case "success":
          return "i-mdi:check-circle text-success-500";
        case "info":
          return "i-mdi:information text-info-500";
        case "warning":
          return "i-mdi:alert-circle text-warning-500";
        case "error":
          return "i-mdi:close-circle text-error-500";
        case "primary":
          return "i-mdi:information-slab-circle text-primary-500";
        case "secondary":
          return "i-mdi:information-slab-circle text-secondary-500";
        case "accent":
          return "i-mdi:information-slab-circle text-accent-500";
        default:
          return "";
      }
    });
    return (a, t) => (r(), u("div", z(a.$attrs, {
      class: ["max-w-lg flex justify-between rounded-lg px-4 py-3", [
        e.colorful ? `bg-${e.type}-50 text-${e.type}-800` : "bg-white text-gray-700",
        e.bordered ? "border border-current" : "border-none shadow"
      ]]
    }), [
      c("div", Ie, [
        e.noIcon ? v("", !0) : (r(), u("div", Le, [
          c("div", {
            class: g(["mr-3 h-6 w-6", m(l)])
          }, null, 2)
        ])),
        h(a.$slots, "default")
      ]),
      e.closeable ? (r(), u("div", Ae, [
        c("button", {
          class: "i-mdi:close-thick h-4 w-4 cursor-pointer transition hover:scale-125",
          onClick: t[0] || (t[0] = (o) => a.$emit("close"))
        })
      ])) : v("", !0)
    ], 16));
  }
}), Ee = { class: "relative cursor-default" }, je = {
  name: "UBadge"
}, Pe = /* @__PURE__ */ p({
  ...je,
  props: {
    type: { default: "default" },
    size: { default: "md" },
    content: { default: "" }
  },
  setup(e) {
    return (i, l) => (r(), u("span", Ee, [
      h(i.$slots, "default", {}, void 0, !0),
      c("span", {
        class: g(["absolute translate-x-1/2 rounded-full text-white -right-1 -top-1/2", [
          e.content ? "min-w-5" : "h-3 w-3",
          [e.type],
          {
            "text-xs": e.size === "sm",
            "px-1 py-0.5 text-xs": e.size === "md",
            "px-2.5 py-1 text-sm ": e.size === "lg"
          }
        ]])
      }, w(e.content), 3)
    ]));
  }
});
const j = (e, i) => {
  const l = e.__vccOpts || e;
  for (const [a, t] of i)
    l[a] = t;
  return l;
}, De = /* @__PURE__ */ j(Pe, [["__scopeId", "data-v-561027e8"]]), Re = {
  name: "UButton"
}, O = /* @__PURE__ */ p({
  ...Re,
  props: {
    as: { default: "button" },
    type: { default: "default" },
    size: { default: "base" },
    disabled: { type: Boolean, default: !1 },
    custom: { default: "" }
  },
  setup(e) {
    const i = e, l = x(() => i.type === "default" ? "text-gray-700 bg-gray-100 hover:bg-gray-200 focus:ring-gray-500" : `text-white bg-${i.type}-500 hover:bg-${i.type}-600 focus:ring-${i.type}-500`);
    return (a, t) => (r(), S(D(e.as), z(a.$attrs, {
      type: "button",
      disabled: e.disabled,
      "aria-disabled": e.disabled,
      class: ["inline-flex cursor-pointer items-center justify-center whitespace-nowrap rounded-md font-sans text-xs font-semibold leading-4 shadow-sm disabled:cursor-not-allowed disabled:opacity-30 focus:outline-none focus:ring-2 focus:ring-offset-2", [m(l), {
        "px-2 py-1": e.size === "sm",
        "px-3 py-2": e.size === "base",
        "px-10 py-4": e.size === "lg"
      }]]
    }), {
      default: C(() => [
        h(a.$slots, "default")
      ]),
      _: 3
    }, 16, ["disabled", "aria-disabled", "class"]));
  }
});
O.install = function(e) {
  e.component(O.name, O);
};
const K = {};
function E(e = "$lodash$") {
  K[e] || (K[e] = 0);
  const i = ++K[e];
  return e === "$lodash$" ? `${i}` : `${e}${i}`;
}
const Fe = { class: "h-6 flex items-center" }, Oe = ["for"], qe = ["id", "disabled"], He = ["for"], Ze = {
  name: "UCheckbox"
}, X = /* @__PURE__ */ p({
  ...Ze,
  props: {
    modelValue: { default: !1 },
    type: { default: "primary" },
    size: { default: "base" },
    checked: { type: Boolean, default: !1 },
    disabled: { type: Boolean, default: !1 },
    checkedValue: { default: void 0 },
    uncheckedValue: { default: void 0 },
    labelLeft: { type: Boolean, default: !1 }
  },
  emits: ["update:modelValue"],
  setup(e, { emit: i }) {
    const l = e, a = E("checkbox-"), t = x({
      get: () => l.checkedValue && l.modelValue === l.checkedValue ? !0 : l.uncheckedValue && l.modelValue === l.uncheckedValue ? !1 : l.modelValue || l.checked,
      set: (o) => {
        l.checkedValue && o ? o = l.checkedValue : l.uncheckedValue && !o && (o = l.uncheckedValue), i("update:modelValue", o);
      }
    });
    return (o, s) => (r(), u("div", Fe, [
      o.$slots.default && e.labelLeft ? (r(), u("label", {
        key: 0,
        for: m(a),
        class: g(["mr-2 select-none", e.disabled ? "cursor-not-allowed" : "cursor-pointer"])
      }, [
        h(o.$slots, "default")
      ], 10, Oe)) : v("", !0),
      L(c("input", z({
        id: m(a),
        "onUpdate:modelValue": s[0] || (s[0] = (n) => N(t) ? t.value = n : null)
      }, o.$attrs, {
        type: "checkbox",
        disabled: e.disabled,
        class: ["border-gray-300 rounded", [
          `text-${e.type}-400 focus:ring-${e.type}-500`,
          e.disabled ? "cursor-not-allowed opacity-30" : "cursor-pointer",
          {
            "h-3 w-3": e.size === "sm",
            "h-4 w-4": e.size === "base",
            "h-5 w-5": e.size === "lg"
          }
        ]]
      }), null, 16, qe), [
        [te, m(t)]
      ]),
      o.$slots.default && !e.labelLeft ? (r(), u("label", {
        key: 1,
        for: m(a),
        class: g(["ml-2 select-none", e.disabled ? "cursor-not-allowed" : "cursor-pointer"])
      }, [
        h(o.$slots, "default")
      ], 10, He)) : v("", !0)
    ]));
  }
}), We = { class: "border border-gray-100 rounded-md p-4" }, _e = { class: "flex-1" }, Ge = /* @__PURE__ */ c("svg", {
  xmlns: "http://www.w3.org/2000/svg",
  fill: "none",
  viewBox: "0 0 24 24",
  "stroke-width": "1.5",
  stroke: "currentColor",
  class: "w-5 text-gray-500"
}, [
  /* @__PURE__ */ c("path", {
    "stroke-linecap": "round",
    "stroke-linejoin": "round",
    d: "M19.5 8.25l-7.5 7.5-7.5-7.5"
  })
], -1), Ke = [
  Ge
], Ye = {
  name: "UCollapse"
}, Xe = /* @__PURE__ */ p({
  ...Ye,
  props: {
    expanded: { type: Boolean, default: !1 },
    disabled: { type: Boolean, default: !1 },
    iconLeft: { type: Boolean, default: !1 }
  },
  setup(e) {
    const i = e, l = B(null), a = I({
      collapsed: !i.expanded,
      expandedCompleted: !1,
      maxHeight: 0,
      toggleExpand() {
        i.disabled || (a.expandedCompleted = !1, a.collapsed && setTimeout(() => {
          a.expandedCompleted = !0;
        }, 300), a.collapsed = !a.collapsed, a.resizeContent());
      },
      resizeContent() {
        var t;
        a.maxHeight = a.collapsed ? 0 : ((t = l.value) == null ? void 0 : t.offsetHeight) || 0;
      }
    });
    return W(() => a.resizeContent()), (t, o) => (r(), u("div", We, [
      c("div", {
        class: g(["flex items-center", [
          e.disabled ? "cursor-not-allowed" : "cursor-pointer",
          {
            "flex-row-reverse": e.iconLeft
          }
        ]]),
        onClick: o[0] || (o[0] = //@ts-ignore
        (...s) => a.toggleExpand && a.toggleExpand(...s))
      }, [
        c("div", _e, [
          h(t.$slots, "default")
        ]),
        c("div", {
          class: g(["transition transition-transform duration-200 ease-in-out", [
            e.iconLeft ? "mr-2" : "ml-2",
            {
              "rotate-180": !a.collapsed
            }
          ]])
        }, Ke, 2)
      ], 2),
      c("div", {
        class: g(["transition-all duration-300 ease-in-out", {
          "overflow-y-hidden": !a.expandedCompleted
        }]),
        style: H({ maxHeight: `${a.maxHeight}px` })
      }, [
        c("div", {
          ref_key: "content",
          ref: l
        }, [
          h(t.$slots, "content")
        ], 512)
      ], 6)
    ]));
  }
}), Qe = { class: "relative" }, Je = {
  class: "absolute inset-0 flex items-center",
  "aria-hidden": "true"
}, et = {
  name: "UDivider"
}, tt = /* @__PURE__ */ p({
  ...et,
  props: {
    align: { default: "center" },
    dashed: { type: Boolean, default: !1 }
  },
  setup(e) {
    return (i, l) => (r(), u("div", Qe, [
      c("div", Je, [
        c("div", {
          class: g(["w-full border-t border-gray-300", { "border-dashed": e.dashed }])
        }, null, 2)
      ]),
      c("div", {
        class: g(["relative flex", {
          "justify-center": e.align === "center",
          "justify-end": e.align === "right",
          "justify-start": e.align === "left"
        }])
      }, [
        h(i.$slots, "default")
      ], 2)
    ]));
  }
}), lt = /* @__PURE__ */ c("div", { class: "absolute inset-0 bg-gray-500 opacity-75" }, null, -1), at = [
  lt
], st = {
  name: "UDrawer"
}, ot = /* @__PURE__ */ p({
  ...st,
  props: {
    modelValue: { type: Boolean, default: !1 },
    placement: { default: "left" }
  },
  emits: ["update:modelValue"],
  setup(e, { emit: i }) {
    const l = e;
    function a() {
      i("update:modelValue", !l.modelValue);
    }
    return R(
      () => l.modelValue,
      (t) => document.body.style.overflow = t ? "hidden" : "auto"
    ), pe(() => {
      a(), document.body.style.overflow = "auto";
    }), (t, o) => (r(), S(re, { to: "body" }, [
      c("div", z(t.$attrs, {
        class: ["fixed z-50 overflow-y-auto bg-white transition-all", {
          "h-screen w-80": e.placement === "right" || e.placement === "left",
          "-left-80 top-0": e.placement === "left" && !e.modelValue,
          "left-0 top-0": e.placement === "left" && e.modelValue,
          "-right-80 top-0": e.placement === "right" && !e.modelValue,
          "right-0 top-0": e.placement === "right" && e.modelValue,
          "h-80 w-full": e.placement === "top" || e.placement === "bottom",
          "-top-80 left-0": e.placement === "top" && !e.modelValue,
          "top-0 left-0 ": e.placement === "top" && e.modelValue,
          "-bottom-80 left-0": e.placement === "bottom" && !e.modelValue,
          "bottom-0 left-0": e.placement === "bottom" && e.modelValue
        }]
      }), [
        h(t.$slots, "default")
      ], 16),
      e.modelValue ? (r(), u("div", {
        key: 0,
        class: "fixed inset-0 z-40",
        "aria-hidden": "true",
        onClick: a
      }, at)) : v("", !0)
    ]));
  }
}), nt = { class: "py-1" }, it = { class: "px-1 py-2 text-sm" }, rt = ["onClick"], dt = { class: "ml-2" }, ut = {
  key: 1,
  class: "my-2 border dark:border-slate-600"
}, ct = {
  name: "UDropdown"
}, ft = /* @__PURE__ */ p({
  ...ct,
  props: {
    options: null
  },
  emits: ["select"],
  setup(e, { emit: i }) {
    const l = B(), a = B(), t = I({
      status: !1,
      timeout: void 0,
      onMouseenter() {
        t.status = !0, clearTimeout(t.timeout), F(() => {
          const o = l.value.getBoundingClientRect(), s = window.innerHeight / 2, n = window.innerWidth / 2;
          o.top > s ? a.value.style.bottom = "calc(100% + 0.5rem)" : a.value.classList.add("mt-2"), o.right > n ? a.value.classList.add("right-0") : a.value.classList.add("left-0");
        });
      },
      onMouseleave() {
        t.timeout = setTimeout(() => t.status = !1, 250);
      },
      select(o) {
        t.status = !1, t.timeout = void 0, i("select", o);
      }
    });
    return (o, s) => (r(), u("div", {
      class: "relative inline-block text-left",
      onMouseleave: s[2] || (s[2] = //@ts-ignore
      (...n) => t.onMouseleave && t.onMouseleave(...n))
    }, [
      c("div", {
        ref_key: "target",
        ref: l,
        class: "w-full inline-flex items-center justify-center rounded-md",
        onMouseenter: s[0] || (s[0] = //@ts-ignore
        (...n) => t.onMouseenter && t.onMouseenter(...n))
      }, [
        h(o.$slots, "default")
      ], 544),
      T(_, {
        "enter-active-class": "transition duration-200 ease-out",
        "enter-from-class": "translate-y-1 opacity-0",
        "enter-to-class": "translate-y-0 opacity-100",
        "leave-active-class": "transition duration-150 ease-in",
        "leave-from-class": "translate-y-0 opacity-100",
        "leave-to-class": "translate-y-1 opacity-0"
      }, {
        default: C(() => [
          t.status ? (r(), u("div", {
            key: 0,
            ref_key: "dropdown",
            ref: a,
            class: "absolute z-10 min-w-max rounded-lg bg-white shadow-lg dark:bg-slate-800",
            tabindex: "-1",
            onMouseenter: s[1] || (s[1] = //@ts-ignore
            (...n) => t.onMouseenter && t.onMouseenter(...n))
          }, [
            c("div", nt, [
              h(o.$slots, "options", {}, () => [
                c("div", it, [
                  (r(!0), u($, null, M(e.options, (n) => (r(), u($, {
                    key: n.key
                  }, [
                    n ? (r(), u("div", {
                      key: 0,
                      class: "hover:bg-primary-200 hover:text-primary-600 flex cursor-pointer items-center rounded-md px-3 py-1",
                      onClick: G((d) => t.select(n), ["stop"])
                    }, [
                      typeof n.icon == "string" ? (r(), u("div", {
                        key: 0,
                        class: g([n.icon, "w-5 text-gray-500"])
                      }, null, 2)) : (r(), S(D(n.icon), {
                        key: 1,
                        class: "w-5"
                      })),
                      c("span", dt, w(n.label), 1)
                    ], 8, rt)) : (r(), u("div", ut))
                  ], 64))), 128))
                ])
              ])
            ])
          ], 544)) : v("", !0)
        ]),
        _: 3
      })
    ], 32));
  }
}), mt = { class: "flex items-center justify-center" }, gt = {
  key: 0,
  class: "flex"
}, ht = /* @__PURE__ */ c("line", {
  x1: "18",
  y1: "6",
  x2: "6",
  y2: "18"
}, null, -1), yt = /* @__PURE__ */ c("line", {
  x1: "6",
  y1: "6",
  x2: "18",
  y2: "18"
}, null, -1), vt = [
  ht,
  yt
], pt = {
  name: "UTag"
}, Q = /* @__PURE__ */ p({
  ...pt,
  props: {
    type: { default: "default" },
    size: { default: "md" },
    rounded: { default: "sm" },
    border: { type: Boolean, default: !1 },
    closeable: { type: Boolean, default: !1 },
    custom: { default: "" }
  },
  emits: ["close"],
  setup(e) {
    const i = e, l = x(() => i.type === "default" ? "bg-gray-100 text-gray-800" : `bg-${i.type}-100 text-${i.type}-800 hover:bg-${i.type}-600`);
    return (a, t) => (r(), u("div", {
      class: g(["inline-block cursor-default whitespace-nowrap text-xs font-medium shadow-sm", [
        m(l),
        `rounded-${e.rounded}`,
        {
          "border border-gray-300": e.border,
          "px-2 py-1": e.size === "sm",
          "px-3 py-1.5": e.size === "md",
          "px-6 py-3": e.size === "lg"
        }
      ]])
    }, [
      c("div", mt, [
        e.closeable ? (r(), u("div", gt, [
          h(a.$slots, "default"),
          (r(), u("svg", {
            class: "ml-1 h-4 w-4 cursor-pointer stroke-2 transition-colors duration-150 ease-in-out hover:text-gray-700",
            width: "24",
            height: "24",
            viewBox: "0 0 24 24",
            stroke: "currentColor",
            "stroke-linejoin": "round",
            "stroke-linecap": "round",
            fill: "none",
            role: "presentation",
            onClick: t[0] || (t[0] = (o) => a.$emit("close"))
          }, vt))
        ])) : h(a.$slots, "default", { key: 1 })
      ])
    ], 2));
  }
}), bt = { class: "flex flex-wrap items-center" }, wt = { class: "relative h-4 min-w-7" }, $t = ["id"], kt = ["for", "textContent"], xt = /* @__PURE__ */ c("svg", {
  xmlns: "http://www.w3.org/2000/svg",
  width: "21",
  height: "21",
  viewBox: "0 0 24 24"
}, [
  /* @__PURE__ */ c("path", {
    fill: "#888888",
    d: "M11 17h2v-4h4v-2h-4V7h-2v4H7v2h4v4Zm1 5q-2.075 0-3.9-.788t-3.175-2.137q-1.35-1.35-2.137-3.175T2 12q0-2.075.788-3.9t2.137-3.175q1.35-1.35 3.175-2.137T12 2q2.075 0 3.9.788t3.175 2.137q1.35 1.35 2.138 3.175T22 12q0 2.075-.788 3.9t-2.137 3.175q-1.35 1.35-3.175 2.138T12 22Zm0-2q3.35 0 5.675-2.325T20 12q0-3.35-2.325-5.675T12 4Q8.65 4 6.325 6.325T4 12q0 3.35 2.325 5.675T12 20Zm0-8Z"
  })
], -1), Vt = {
  name: "UDynamicTags"
}, Ct = /* @__PURE__ */ p({
  ...Vt,
  props: {
    modelValue: { default: () => [] },
    max: { default: 10 },
    renderTag: { type: Function, default: void 0 },
    closeable: { type: Boolean, default: !0 }
  },
  emits: ["update:modelValue"],
  setup(e, { emit: i }) {
    const l = e, a = E("dynamic-tag-"), t = x({
      get: () => l.modelValue,
      set: (n) => i("update:modelValue", n)
    }), o = B(null), s = I({
      newTag: "",
      typing: !1,
      clickAdd: () => {
        s.typing = !0, setTimeout(() => {
          var n;
          return (n = o.value) == null ? void 0 : n.focus();
        }, 0);
      },
      removeTag: (n) => {
        t.value = t.value.filter((d) => d !== n);
      },
      addTag: (n) => {
        const f = n.target.value.trim();
        f && t.value.push(f), s.deactive();
      },
      deactive: () => {
        s.newTag = "", s.typing = !1;
      }
    });
    return (n, d) => (r(), u("div", bt, [
      e.renderTag !== void 0 ? (r(!0), u($, { key: 0 }, M(m(t), (f, y) => (r(), S(D(e.renderTag(f, y)), {
        key: y,
        class: "mr-2"
      }))), 128)) : (r(!0), u($, { key: 1 }, M(m(t), (f) => (r(), S(Q, {
        key: f,
        closeable: e.closeable,
        class: "mr-2",
        onClose: (y) => s.removeTag(f)
      }, {
        default: C(() => [
          A(w(f), 1)
        ]),
        _: 2
      }, 1032, ["closeable", "onClose"]))), 128)),
      s.typing ? h(n.$slots, "input", {
        key: 2,
        submit: s.addTag,
        deactive: s.deactive
      }, () => [
        T(Q, null, {
          default: C(() => [
            c("div", wt, [
              L(c("input", {
                id: m(a),
                ref_key: "newTagInputRef",
                ref: o,
                "onUpdate:modelValue": d[0] || (d[0] = (f) => s.newTag = f),
                class: "absolute inline h-full w-full border-none bg-transparent text-gray-500 outline-transparent focus:outline-none",
                onBlur: d[1] || (d[1] = //@ts-ignore
                (...f) => s.addTag && s.addTag(...f)),
                onKeyup: d[2] || (d[2] = be((f) => n.$refs.newTagInputRef.blur(), ["enter"]))
              }, null, 40, $t), [
                [we, s.newTag]
              ]),
              c("label", {
                for: m(a),
                class: "invisible",
                textContent: w(s.newTag)
              }, null, 8, kt)
            ])
          ]),
          _: 1
        })
      ]) : v("", !0),
      m(t).length < e.max && !s.typing ? (r(), u("span", {
        key: 3,
        class: "cursor-pointer",
        onClick: d[3] || (d[3] = //@ts-ignore
        (...f) => s.clickAdd && s.clickAdd(...f))
      }, [
        h(n.$slots, "trigger", {}, () => [
          xt
        ])
      ])) : v("", !0)
    ]));
  }
}), Bt = (e) => (le("data-v-63ad8d03"), e = e(), ae(), e), zt = ["for"], St = {
  key: 0,
  class: "flex flex-wrap gap-1"
}, Mt = {
  key: 1,
  class: "text-sm"
}, Ut = {
  key: 2,
  class: "text-gray-400"
}, Tt = /* @__PURE__ */ Bt(() => /* @__PURE__ */ c("div", { class: "i-mdi:upload h-5 w-5 text-gray-400" }, null, -1)), It = ["id", "multiple"], Lt = {
  name: "UFileInput"
}, At = /* @__PURE__ */ p({
  ...Lt,
  props: {
    fileList: null,
    placeholder: { default: "Select a file" },
    multiple: { type: Boolean, default: !1 }
  },
  emits: ["change", "update:fileList"],
  setup(e, { emit: i }) {
    const l = e, a = E("file-input-"), t = x({
      get() {
        return l.fileList || [];
      },
      set(s) {
        i("update:fileList", s);
      }
    }), o = I({
      fileNames: [],
      onChange(s) {
        const n = s.target, d = Array.from(n.files || []);
        o.fileNames = d.map((f) => f.name), t.value = d.map((f) => ({
          id: E("file-"),
          name: f.name,
          file: f
        })), i("change", s);
      }
    });
    return (s, n) => (r(), u($, null, [
      c("label", {
        for: m(a),
        class: g({ upload: !s.$slots.default })
      }, [
        s.$slots.default ? h(s.$slots, "default", { key: 0 }, void 0, !0) : (r(), u($, { key: 1 }, [
          o.fileNames.length > 1 ? (r(), u("div", St, [
            (r(!0), u($, null, M(o.fileNames, (d) => (r(), u("div", {
              key: d,
              class: "bg-primary-300 text-whit inline-block whitespace-nowrap rounded px-1 text-center text-xs"
            }, w(d), 1))), 128))
          ])) : o.fileNames.length === 1 ? (r(), u("div", Mt, w(o.fileNames[0]), 1)) : (r(), u("div", Ut, w(e.placeholder), 1)),
          Tt
        ], 64))
      ], 10, zt),
      c("input", z({
        id: m(a),
        class: "hidden",
        type: "file"
      }, s.$attrs, {
        multiple: e.multiple,
        onChange: n[0] || (n[0] = //@ts-ignore
        (...d) => o.onChange && o.onChange(...d))
      }), null, 16, It)
    ], 64));
  }
});
const Nt = /* @__PURE__ */ j(At, [["__scopeId", "data-v-63ad8d03"]]), Et = { class: "mb-1 text-sm empty:hidden" }, jt = {
  key: 2,
  class: "text-error-500"
}, Pt = { class: "flex" }, Dt = { class: "relative w-full flex items-center" }, Rt = {
  key: 0,
  class: "absolute left-3 z-10"
}, Ft = ["type", "disabled", "placeholder"], Ot = {
  key: 1,
  class: "absolute right-3 z-10"
}, qt = {
  key: 0,
  class: "text-error-500 mt-1 text-xs"
}, Ht = {
  name: "UInput",
  inheritAttrs: !1
}, Zt = /* @__PURE__ */ p({
  ...Ht,
  props: {
    modelValue: { default: "" },
    label: { default: "" },
    type: { default: "text" },
    size: { default: "md" },
    disabled: { type: Boolean, default: !1 },
    required: { type: Boolean, default: !1 },
    errorMessage: { default: "" },
    placeholder: { default: "Please input" },
    clearable: { type: Boolean, default: !1 },
    leftIcon: { default: "" },
    rightIcon: { default: "" }
  },
  emits: ["update:modelValue", "clear", "clickLeft", "clickRight"],
  setup(e, { emit: i }) {
    const l = e, a = x({
      get: () => l.modelValue,
      set: (o) => i("update:modelValue", o)
    }), t = I({
      focused: !1,
      clear() {
        a.value = "", i("clear");
      }
    });
    return (o, s) => (r(), u("div", {
      class: g(["w-full flex flex-col", { "opacity-60": e.disabled }])
    }, [
      c("label", Et, [
        e.label ? (r(), u($, { key: 0 }, [
          A(w(e.label), 1)
        ], 64)) : h(o.$slots, "default", { key: 1 }, void 0, !0),
        e.required ? (r(), u("span", jt, "*")) : v("", !0)
      ]),
      c("div", Pt, [
        o.$slots.prepend ? (r(), u("span", {
          key: 0,
          class: g(["inline-flex items-center border border-r-0 rounded-l-md px-3 text-sm", {
            "py-0.5": e.size === "sm",
            "py-1.5": e.size === "md",
            "py-2": e.size === "lg"
          }])
        }, [
          h(o.$slots, "prepend", {}, void 0, !0)
        ], 2)) : v("", !0),
        c("div", Dt, [
          e.leftIcon ? (r(), u("div", Rt, [
            c("div", {
              class: g(["h-5 w-5", e.leftIcon]),
              onClick: s[0] || (s[0] = (n) => o.$emit("clickLeft"))
            }, null, 2)
          ])) : v("", !0),
          L(c("input", z({
            "onUpdate:modelValue": s[1] || (s[1] = (n) => N(a) ? a.value = n : null)
          }, o.$attrs, {
            type: e.type,
            disabled: e.disabled,
            placeholder: e.placeholder,
            class: ["text-field-input", {
              // size
              "py-1": e.size === "sm",
              "py-2": e.size === "md",
              "py-3": e.size === "lg",
              // icon
              "pl-10": e.leftIcon,
              "pr-10": e.rightIcon && !e.clearable || !e.rightIcon && e.clearable,
              "pr-15": e.rightIcon && e.clearable,
              "px-3": !e.leftIcon && !e.rightIcon,
              prepend: o.$slots.prepend,
              append: o.$slots.append,
              danger: e.errorMessage,
              "cursor-not-allowed": e.disabled
            }],
            onFocus: s[2] || (s[2] = (n) => t.focused = !0),
            onBlur: s[3] || (s[3] = (n) => t.focused = !1)
          }), null, 16, Ft), [
            [$e, m(a)]
          ]),
          e.rightIcon ? (r(), u("div", Ot, [
            c("div", {
              class: g(["h-5 w-5", e.rightIcon]),
              onClick: s[4] || (s[4] = (n) => o.$emit("clickRight"))
            }, null, 2)
          ])) : v("", !0),
          c("div", {
            class: g(["absolute z-10", {
              "right-3": e.clearable && !e.rightIcon,
              "right-10": e.clearable && e.rightIcon
            }])
          }, [
            e.modelValue && e.clearable ? (r(), u("div", {
              key: 0,
              class: "i-mdi:close-circle-outline h-5 w-5 cursor-pointer text-gray-400 duration-300 hover:text-gray-500",
              onClick: s[5] || (s[5] = //@ts-ignore
              (...n) => t.clear && t.clear(...n))
            })) : v("", !0)
          ], 2)
        ]),
        o.$slots.append ? (r(), u("span", {
          key: 1,
          class: g(["inline-flex items-center border border-l-0 rounded-r-md px-3 text-sm", {
            "py-0.5": e.size === "sm",
            "py-1.5": e.size === "md",
            "py-2": e.size === "lg"
          }])
        }, [
          h(o.$slots, "append", {}, void 0, !0)
        ], 2)) : v("", !0)
      ]),
      e.errorMessage ? (r(), u("span", qt, w(e.errorMessage), 1)) : v("", !0)
    ], 2));
  }
});
const Wt = /* @__PURE__ */ j(Zt, [["__scopeId", "data-v-49c21e6b"]]), _t = /* @__PURE__ */ c("span", { class: "sr-only" }, "Loading...", -1), Gt = [
  _t
], Kt = {
  name: "USpin"
}, J = /* @__PURE__ */ p({
  ...Kt,
  props: {
    show: { type: Boolean, default: !0 },
    type: { default: "primary" },
    thickness: { default: 8 }
  },
  setup(e) {
    const i = e, l = B(null), a = B(null);
    return W(() => {
      F(() => {
        if (l.value && a.value) {
          const t = l.value.getBoundingClientRect().width / i.thickness;
          a.value.style.borderWidth = `${t}px`;
        }
      });
    }), (t, o) => (r(), u("div", z({
      ref_key: "wrapper",
      ref: l
    }, t.$attrs, {
      class: {
        "h-8 w-8": !t.$attrs.hasOwnProperty("class")
      }
    }), [
      h(t.$slots, "icon", {}, () => [
        c("div", {
          ref_key: "spinner",
          ref: a,
          class: g(["inline-block h-full w-full animate-spin border-gray-300 rounded-full bg-transparent", `border-r-${e.type}-500`])
        }, Gt, 2)
      ])
    ], 16));
  }
}), Yt = { class: "absolute left-1/2 top-2/4 -translate-x-1/2 -translate-y-1/2" }, Xt = {
  name: "ULoading"
}, Qt = /* @__PURE__ */ p({
  ...Xt,
  props: {
    show: { type: Boolean, default: !0 }
  },
  setup(e) {
    const i = de(), l = x(() => ke($, i.default ? i.default() : [])), a = B(1e3);
    return W(() => {
      F(() => {
        l.value && l.value.children && l.value.children[0] && (a.value = l.value.children[0].el.offsetWidth);
      });
    }), (t, o) => t.$slots.default ? (r(), u("div", {
      key: 0,
      class: "relative",
      style: H({ width: `${a.value}px` })
    }, [
      c("div", {
        class: g({ "opacity-30": e.show })
      }, [
        T(m(l))
      ], 2),
      c("div", Yt, [
        e.show ? (r(), S(J, Y(z({ key: 0 }, t.$attrs)), {
          icon: C(() => [
            h(t.$slots, "icon")
          ]),
          default: C(() => [
            h(t.$slots, "default")
          ]),
          _: 3
        }, 16)) : v("", !0)
      ])
    ], 4)) : (r(), u($, { key: 1 }, [
      e.show ? (r(), S(J, Y(z({ key: 0 }, t.$attrs)), null, 16)) : v("", !0)
    ], 64));
  }
}), Jt = ["onClick"], el = { class: "min-h-full flex items-center justify-center p-2 sm:p-6" }, tl = /* @__PURE__ */ c("svg", {
  xmlns: "http://www.w3.org/2000/svg",
  viewBox: "0 0 24 24",
  stroke: "currentColor"
}, [
  /* @__PURE__ */ c("path", {
    "stroke-linecap": "round",
    "stroke-linejoin": "round",
    "stroke-width": "2",
    d: "M6 18L18 6M6 6l12 12"
  })
], -1), ll = [
  tl
], al = {
  name: "UModal"
}, sl = /* @__PURE__ */ p({
  ...al,
  props: {
    modelValue: { type: Boolean },
    dismissible: { type: Boolean, default: !0 },
    dismissButton: { type: Boolean, default: !0 },
    size: { default: "base" },
    padded: { type: Boolean, default: !0 }
  },
  emits: ["update:modelValue"],
  setup(e, { emit: i }) {
    const l = e, a = x({
      get: () => l.modelValue,
      set: (o) => i("update:modelValue", o)
    });
    function t() {
      l.dismissible && (a.value = !1);
    }
    return (o, s) => (r(), S(re, { to: "body" }, [
      c("div", {
        class: g(["fixed inset-0 z-30 overflow-y-auto transition-all ease-in", [
          m(a) ? "visible" : "invisible duration-100 ease-in"
        ]])
      }, [
        c("div", {
          class: g(["fixed inset-0 bg-gray-500 transition-opacity dark:bg-gray-600", [
            m(a) ? "opacity-75 duration-75 ease-out" : "opacity-0 duration-75 ease-in"
          ]]),
          onClick: G(t, ["self"])
        }, null, 10, Jt),
        c("div", el, [
          c("div", {
            class: g(["relative inline-block rounded-lg bg-white shadow-xl transition-all dark:bg-gray-900", [
              {
                "w-full sm:max-w-sm": e.size === "sm",
                "w-full sm:max-w-lg": e.size === "base",
                "w-full sm:max-w-xl": e.size === "md",
                "w-full sm:max-w-3xl": e.size === "lg",
                "w-full sm:max-w-5xl": e.size === "xl",
                "w-full": e.size === "full",
                "p-4 sm:p-6": e.padded
              },
              m(a) ? "translate-y-0 opacity-100 duration-300 sm:scale-100" : "translate-y-4 opacity-0 duration-300 sm:translate-y-0 sm:scale-95"
            ]]),
            role: "dialog",
            "aria-modal": "true",
            "aria-labelledby": "modal-headline"
          }, [
            e.dismissButton ? (r(), u("button", {
              key: 0,
              class: "absolute right-4 top-4 h-6 w-6 rounded-full bg-gray-100 p-1 text-gray-700 dark:bg-gray-800 hover:bg-gray-200 dark:text-gray-300 focus:outline-none focus:ring-2 focus:ring-gray-500 dark:hover:bg-gray-700",
              "aria-label": "close",
              onClick: t
            }, ll)) : v("", !0),
            h(o.$slots, "default")
          ], 2)
        ])
      ], 2)
    ]));
  }
});
function fe(e) {
  return xe() ? (Ve(e), !0) : !1;
}
function Z(e) {
  return typeof e == "function" ? e() : m(e);
}
const me = typeof window < "u", se = () => {
}, ee = /* @__PURE__ */ ol();
function ol() {
  var e;
  return me && ((e = window == null ? void 0 : window.navigator) == null ? void 0 : e.userAgent) && /* @__PURE__ */ /iP(ad|hone|od)/.test(window.navigator.userAgent);
}
const oe = {
  mounted: "mounted",
  updated: "updated",
  unmounted: "unmounted"
};
function nl(...e) {
  if (e.length !== 1)
    return Ce(...e);
  const i = e[0];
  return typeof i == "function" ? Be(ze(() => ({ get: i, set: se }))) : B(i);
}
function P(e) {
  var i;
  const l = Z(e);
  return (i = l == null ? void 0 : l.$el) != null ? i : l;
}
const ge = me ? window : void 0;
function q(...e) {
  let i, l, a, t;
  if (typeof e[0] == "string" || Array.isArray(e[0]) ? ([l, a, t] = e, i = ge) : [i, l, a, t] = e, !i)
    return se;
  Array.isArray(l) || (l = [l]), Array.isArray(a) || (a = [a]);
  const o = [], s = () => {
    o.forEach((y) => y()), o.length = 0;
  }, n = (y, V, b, k) => (y.addEventListener(V, b, k), () => y.removeEventListener(V, b, k)), d = R(
    () => [P(i), Z(t)],
    ([y, V]) => {
      s(), y && o.push(
        ...l.flatMap((b) => a.map((k) => n(y, b, k, V)))
      );
    },
    { immediate: !0, flush: "post" }
  ), f = () => {
    d(), s();
  };
  return fe(f), f;
}
let ne = !1;
function ie(e, i, l = {}) {
  const { window: a = ge, ignore: t = [], capture: o = !0, detectIframe: s = !1 } = l;
  if (!a)
    return;
  ee && !ne && (ne = !0, Array.from(a.document.body.children).forEach((b) => b.addEventListener("click", se)));
  let n = !0;
  const d = (b) => t.some((k) => {
    if (typeof k == "string")
      return Array.from(a.document.querySelectorAll(k)).some((U) => U === b.target || b.composedPath().includes(U));
    {
      const U = P(k);
      return U && (b.target === U || b.composedPath().includes(U));
    }
  }), y = [
    q(a, "click", (b) => {
      const k = P(e);
      if (!(!k || k === b.target || b.composedPath().includes(k))) {
        if (b.detail === 0 && (n = !d(b)), !n) {
          n = !0;
          return;
        }
        i(b);
      }
    }, { passive: !0, capture: o }),
    q(a, "pointerdown", (b) => {
      const k = P(e);
      k && (n = !b.composedPath().includes(k) && !d(b));
    }, { passive: !0 }),
    s && q(a, "blur", (b) => {
      var k;
      const U = P(e);
      ((k = a.document.activeElement) == null ? void 0 : k.tagName) === "IFRAME" && !(U != null && U.contains(a.document.activeElement)) && i(b);
    })
  ].filter(Boolean);
  return () => y.forEach((b) => b());
}
const he = {
  [oe.mounted](e, i) {
    const l = !i.modifiers.bubble;
    if (typeof i.value == "function")
      e.__onClickOutside_stop = ie(e, i.value, { capture: l });
    else {
      const [a, t] = i.value;
      e.__onClickOutside_stop = ie(e, a, Object.assign({ capture: l }, t));
    }
  },
  [oe.unmounted](e) {
    e.__onClickOutside_stop();
  }
};
function ye(e) {
  const i = window.getComputedStyle(e);
  if (i.overflowX === "scroll" || i.overflowY === "scroll" || i.overflowX === "auto" && e.clientHeight < e.scrollHeight || i.overflowY === "auto" && e.clientWidth < e.scrollWidth)
    return !0;
  {
    const l = e.parentNode;
    return !l || l.tagName === "BODY" ? !1 : ye(l);
  }
}
function il(e) {
  const i = e || window.event, l = i.target;
  return ye(l) ? !1 : i.touches.length > 1 ? !0 : (i.preventDefault && i.preventDefault(), !1);
}
function rl(e, i = !1) {
  const l = B(i);
  let a = null, t;
  R(nl(e), (n) => {
    if (n) {
      const d = n;
      t = d.style.overflow, l.value && (d.style.overflow = "hidden");
    }
  }, {
    immediate: !0
  });
  const o = () => {
    const n = Z(e);
    !n || l.value || (ee && (a = q(
      n,
      "touchmove",
      (d) => {
        il(d);
      },
      { passive: !1 }
    )), n.style.overflow = "hidden", l.value = !0);
  }, s = () => {
    const n = Z(e);
    !n || !l.value || (ee && (a == null || a()), n.style.overflow = t, l.value = !1);
  };
  return fe(s), x({
    get() {
      return l.value;
    },
    set(n) {
      n ? o() : s();
    }
  });
}
function dl() {
  let e = !1;
  const i = B(!1);
  return (l, a) => {
    if (i.value = a.value, e)
      return;
    e = !0;
    const t = rl(l, a.value);
    R(i, (o) => t.value = o);
  };
}
dl();
const ul = { class: "relative inline-block text-left" }, cl = {
  name: "UPopover"
}, fl = /* @__PURE__ */ p({
  ...cl,
  props: {
    position: { default: "auto" },
    trigger: { default: "click" },
    dissmissable: { type: Boolean, default: !1 },
    sustain: { type: Boolean, default: !1 },
    hoverAlive: { type: Boolean, default: !1 }
  },
  emits: ["open", "close"],
  setup(e, { emit: i }) {
    const l = e, a = B(null), t = B(null), o = I({
      inPanel: !1,
      status: !1,
      onClick: () => {
        l.trigger === "click" && o.toggleStatus();
      },
      onMouseenter() {
        l.trigger === "hover" && o.open();
      },
      onMouseleave() {
        l.trigger === "hover" && o.close();
      },
      toggleStatus() {
        o.status = !o.status, o.status ? o.open() : o.close();
      },
      open() {
        o.status = !0, i("open"), F(() => {
          const s = a.value.getBoundingClientRect();
          t.value.style.left = `${s.x}px`, t.value.style.top = `${s.y}px`;
          let n, d;
          if (l.position === "auto") {
            const f = window.innerHeight / 2;
            n = `calc(${s.width / 2}px - 50%)`, d = s.top > f ? "calc(-100% - 0.25rem)" : `calc(${s.height}px + 0.25rem)`;
          } else
            l.position === "left" ? (n = "calc(-100% - 0.25rem)", d = `calc(${s.height / 2}px - 50%)`) : l.position === "right" ? (n = `calc(${s.width}px + 0.25rem)`, d = `calc(${s.height / 2}px - 50%)`) : l.position === "top" ? (n = `calc(${s.width / 2}px - 50%)`, d = "calc(-100% - 0.25rem)") : l.position === "bottom" && (n = `calc(${s.width / 2}px - 50%)`, d = `calc(${s.height}px + 0.25rem)`);
          t.value.style.transform = `translate(${n}, ${d})`;
        });
      },
      close() {
        setTimeout(() => o.status = !1, 100), i("close");
      }
    });
    return (s, n) => L((r(), u("div", ul, [
      c("div", {
        ref_key: "target",
        ref: a,
        class: "w-full inline-flex items-center justify-center rounded-md",
        onClick: n[0] || (n[0] = //@ts-ignore
        (...d) => o.onClick && o.onClick(...d)),
        onMouseenter: n[1] || (n[1] = //@ts-ignore
        (...d) => o.onMouseenter && o.onMouseenter(...d)),
        onMouseleave: n[2] || (n[2] = (d) => e.sustain ? null : o.onMouseleave())
      }, [
        h(s.$slots, "default")
      ], 544),
      T(_, {
        "enter-active-class": "transition-opacity duration-300 ease-out",
        "enter-from-class": "opacity-0",
        "enter-to-class": "opacity-100",
        "leave-active-class": "duration-200 ease-in",
        "leave-from-class": "opacity-100",
        "leave-to-class": "opacity-0"
      }, {
        default: C(() => [
          e.hoverAlive && o.inPanel || o.status ? (r(), u("div", {
            key: 0,
            ref_key: "dropdown",
            ref: t,
            class: "fixed left-0 top-0 z-10 min-w-max rounded-lg bg-white shadow-lg dark:bg-slate-800",
            tabindex: "-1"
          }, [
            c("div", {
              class: "py-1",
              onMouseenter: n[3] || (n[3] = (d) => o.inPanel = !0),
              onMouseleave: n[4] || (n[4] = (d) => o.inPanel = !1),
              onClick: n[5] || (n[5] = (d) => e.dissmissable ? o.close() : null)
            }, [
              h(s.$slots, "content")
            ], 32)
          ], 512)) : v("", !0)
        ]),
        _: 3
      })
    ])), [
      [m(he), o.close]
    ]);
  }
}), ml = (e) => (le("data-v-2b4f1ce4"), e = e(), ae(), e), gl = {
  key: 0,
  class: "overflow-hidden rounded-lg bg-gray-200 dark:bg-gray-700"
}, hl = {
  key: 1,
  class: "-rotate-90",
  viewBox: "0 0 100 100"
}, yl = /* @__PURE__ */ ml(() => /* @__PURE__ */ c("circle", {
  class: "text-gray-200 dark:text-gray-700",
  stroke: "currentColor",
  "stroke-linejoin": "round",
  "stroke-linecap": "round",
  "stroke-width": "8",
  fill: "none",
  cx: "50",
  cy: "50",
  r: "40"
}, null, -1)), vl = {
  key: 2,
  class: "inline-block space-x-1"
}, pl = {
  name: "UProgress"
}, bl = /* @__PURE__ */ p({
  ...pl,
  props: {
    color: { default: "primary" },
    percentage: null,
    scoreLength: { default: 5 },
    tag: { default: "div" },
    variant: { default: "bar" }
  },
  setup(e) {
    const i = e, l = x(() => 251 / 100 * i.percentage);
    function a(t) {
      return (t - 1) * (100 / i.scoreLength) <= i.percentage;
    }
    return (t, o) => (r(), S(D(e.tag), null, {
      default: C(() => [
        e.variant === "bar" ? (r(), u("div", gl, [
          c("div", {
            class: g(["h-2 rounded-lg", [[e.color]]]),
            style: H({ width: `${e.percentage}%` })
          }, null, 6)
        ])) : e.variant === "circle" ? (r(), u("svg", hl, [
          yl,
          c("circle", {
            class: g([[e.color]]),
            style: H({ strokeDasharray: `${m(l)} 252` }),
            stroke: "currentColor",
            "stroke-linejoin": "round",
            "stroke-linecap": "round",
            "stroke-width": "8",
            fill: "none",
            cx: "50",
            cy: "50",
            r: "40"
          }, null, 6)
        ])) : e.variant === "score" ? (r(), u("div", vl, [
          (r(!0), u($, null, M(e.scoreLength, (s) => (r(), u("div", {
            key: s,
            class: g(["inline-block h-2 w-3 rounded-sm", {
              "bg-gray-200 dark:bg-gray-700": !a(s),
              // TODO: dark mode
              "bg-primary-500": a(s) && e.color === "primary",
              "bg-secondary-500": a(s) && e.color === "secondary",
              "bg-success-500": a(s) && e.color === "success",
              "bg-error-500": a(s) && e.color === "error",
              "bg-warning-500": a(s) && e.color === "warning",
              "bg-info-500": a(s) && e.color === "info",
              "bg-accent-500": a(s) && e.color === "accent"
            }])
          }, null, 2))), 128))
        ])) : v("", !0)
      ]),
      _: 1
    }));
  }
});
const wl = /* @__PURE__ */ j(bl, [["__scopeId", "data-v-2b4f1ce4"]]), $l = ["for"], kl = ["id", "value", "name", "disabled"], xl = {
  name: "URadio"
}, Vl = /* @__PURE__ */ p({
  ...xl,
  props: {
    modelValue: { type: [String, Number, Boolean, null], default: void 0 },
    type: { default: "primary" },
    value: { type: [String, Number, Boolean, null], default: void 0 },
    disabled: { type: Boolean, default: !1 },
    options: { default: () => [] },
    bordered: { type: Boolean, default: !1 },
    hidden: { type: Boolean, default: !1 }
  },
  emits: ["update:modelValue", "change"],
  setup(e, { emit: i }) {
    const l = e, a = E("radio-group-"), t = x({
      get: () => l.modelValue,
      set: (s) => i("update:modelValue", s)
    }), o = x(() => l.value === t.value);
    return (s, n) => (r(), u("label", {
      for: m(a),
      class: g(["inline-flex select-none items-center font-medium leading-6 text-gray-900", [
        e.disabled ? "cursor-not-allowed opacity-60" : "cursor-pointer",
        {
          "border-1 rounded p-2 transition-colors duration-150 ease-in-out": e.bordered,
          "border-gray-300": e.bordered && !m(o) && !e.disabled,
          [`border-${e.type}-500`]: e.bordered && m(o)
        }
      ]])
    }, [
      L(c("input", z(s.$attrs, {
        id: m(a),
        "onUpdate:modelValue": n[0] || (n[0] = (d) => N(t) ? t.value = d : null),
        type: "radio",
        value: e.value,
        name: m(a),
        disabled: e.disabled,
        class: [
          "h-4 w-4 border-gray-300",
          [
            `text-${e.type}-600 focus:ring-${e.type}-500`,
            {
              "sr-only": e.hidden
            }
          ]
        ],
        onChange: n[1] || (n[1] = (d) => s.$emit("change", m(t)))
      }), null, 16, kl), [
        [Se, m(t)]
      ]),
      c("div", {
        class: g({ "pl-2": s.$slots.default && !e.hidden })
      }, [
        h(s.$slots, "default", { checked: m(o) })
      ], 2)
    ], 10, $l));
  }
}), Cl = {
  id: "listbox-label",
  class: "block text-sm font-medium leading-6 text-gray-900"
}, Bl = { class: "relative my-1" }, zl = {
  key: 0,
  class: "block min-h-6 text-gray-400"
}, Sl = {
  key: 1,
  class: "block truncate"
}, Ml = { class: "absolute inset-y-0 right-0 flex items-center pr-2 text-gray-500" }, Ul = {
  key: 1,
  class: "i-mi:select h-5 w-5"
}, Tl = {
  key: 0,
  class: "absolute z-10 mt-1 max-h-60 w-full overflow-auto rounded-md bg-white py-1 text-base shadow-lg ring-1 ring-black ring-opacity-5 sm:text-sm focus:outline-none",
  tabindex: "-1",
  role: "listbox",
  "aria-labelledby": "listbox-label",
  "aria-activedescendant": "listbox-option-3"
}, Il = ["onClick"], Ll = { class: "block truncate font-normal" }, Al = /* @__PURE__ */ c("span", { class: "absolute inset-y-0 right-0 flex items-center pr-4 text-white" }, [
  /* @__PURE__ */ c("svg", {
    class: "h-5 w-5",
    viewBox: "0 0 20 20",
    fill: "currentColor",
    "aria-hidden": "true"
  }, [
    /* @__PURE__ */ c("path", {
      "fill-rule": "evenodd",
      d: "M16.704 4.153a.75.75 0 01.143 1.052l-8 10.5a.75.75 0 01-1.127.075l-4.5-4.5a.75.75 0 011.06-1.06l3.894 3.893 7.48-9.817a.75.75 0 011.05-.143z",
      "clip-rule": "evenodd"
    })
  ])
], -1), Nl = {
  key: 0,
  class: "text-xs text-red-500"
}, El = {
  name: "USelect"
}, jl = /* @__PURE__ */ p({
  ...El,
  props: {
    label: { default: "" },
    modelValue: null,
    placeholder: { default: "Please select" },
    disabled: { type: Boolean, default: !1 },
    clearable: { type: Boolean, default: !1 },
    filterable: { type: Boolean, default: !1 },
    options: { default: () => [] },
    display: { default: "label" },
    errorMessage: { default: "" }
  },
  emits: ["update:modelValue", "change"],
  setup(e, { emit: i }) {
    const l = e, a = x({
      get: () => l.modelValue,
      set: (s) => {
        i("update:modelValue", s), i("change", s);
      }
    }), t = x(() => {
      var s, n;
      return ((n = (s = l.options) == null ? void 0 : s.find((d) => d.value === a.value)) == null ? void 0 : n[l.display]) || l.placeholder;
    }), o = I({
      show: !1,
      onSelect(s) {
        o.show = !1, a.value = s;
      },
      display(s) {
        return s[l.display || "label"];
      },
      clear() {
        a.value = null, o.show = !1;
      },
      toggleMenu() {
        l.disabled || (o.show = !o.show);
      }
    });
    return (s, n) => (r(), u("div", null, [
      c("label", Cl, w(e.label), 1),
      L((r(), u("div", Bl, [
        c("button", {
          type: "button",
          class: g(["group relative w-full rounded-md bg-white py-1.5 pl-3 pr-10 text-left shadow-sm ring-1 ring-inset sm:text-sm sm:leading-6 focus:outline-none focus:ring-2", {
            "text-red-500 ring-red-500 focus:ring-red-500": e.errorMessage,
            "text-gray-900 ring-gray-300 focus:ring-indigo-600": !e.errorMessage,
            "cursor-not-allowed opacity-40": e.disabled,
            "cursor-default": !e.disabled
          }]),
          "aria-haspopup": "listbox",
          "aria-expanded": "true",
          "aria-labelledby": "listbox-label",
          onClick: n[1] || (n[1] = //@ts-ignore
          (...d) => o.toggleMenu && o.toggleMenu(...d))
        }, [
          m(a) ? (r(), u("span", Sl, w(m(t)), 1)) : (r(), u("span", zl, w(e.placeholder), 1)),
          c("span", Ml, [
            e.clearable && m(a) ? (r(), u("div", {
              key: 0,
              class: "i-mi:select group-hover:i-mdi:close-circle-outline h-5 w-5 group-hover:h-5 group-hover:w-5 hover:cursor-pointer",
              onClick: n[0] || (n[0] = G(
                //@ts-ignore
                (...d) => o.clear && o.clear(...d),
                ["stop"]
              ))
            })) : (r(), u("div", Ul))
          ])
        ], 2),
        T(_, {
          "leave-active-class": "transition ease-in duration-100",
          "leave-from-class": "opacity-100",
          "leave-to-class": "opacity-0"
        }, {
          default: C(() => [
            o.show ? (r(), u("ul", Tl, [
              (r(!0), u($, null, M(e.options, (d) => (r(), u("li", {
                id: "listbox-option-0",
                key: d.value,
                role: "option",
                class: g(["text relative cursor-default select-none py-2 pl-3 pr-9", {
                  "bg-primary-500 text-white ": e.modelValue === d.value,
                  "hover:bg-primary-500 text-gray-900 hover:text-white": e.modelValue !== d.value
                }]),
                onClick: (f) => o.onSelect(d.value)
              }, [
                e.modelValue === d.value ? (r(), u($, { key: 0 }, [
                  c("span", Ll, w(o.display(d)), 1),
                  Al
                ], 64)) : (r(), u($, { key: 1 }, [
                  A(w(o.display(d)), 1)
                ], 64))
              ], 10, Il))), 128))
            ])) : v("", !0)
          ]),
          _: 1
        })
      ])), [
        [m(he), () => o.show = !1]
      ]),
      e.errorMessage ? (r(), u("div", Nl, w(e.errorMessage), 1)) : v("", !0)
    ]));
  }
}), Pl = {
  name: "USkeleton",
  inheritAttrs: !1
}, Dl = /* @__PURE__ */ p({
  ...Pl,
  props: {
    as: { default: "div" }
  },
  setup(e) {
    return (i, l) => {
      var a;
      return r(), S(D(e.as), z(i.$attrs, {
        class: ["animate-pulse", {
          "bg-gray-200": !((a = i.$attrs.class) != null && a.includes("bg-"))
        }]
      }), {
        default: C(() => [
          A(" ​ ")
        ]),
        _: 1
      }, 16, ["class"]);
    };
  }
}), Rl = { class: "flex items-center" }, Fl = ["for"], Ol = { class: "mr-2 font-medium leading-6 text-gray-900 empty:hidden" }, ql = {
  tabindex: "0",
  class: "relative"
}, Hl = ["id", "disabled"], Zl = /* @__PURE__ */ ue('<defs><linearGradient id="mingcuteLoadingLine0" x1="50%" x2="50%" y1="5.271%" y2="91.793%"><stop offset="0%" stop-color="#888888"></stop><stop offset="100%" stop-color="currentColor" stop-opacity=".55"></stop></linearGradient><linearGradient id="mingcuteLoadingLine1" x1="50%" x2="50%" y1="8.877%" y2="90.415%"><stop offset="0%" stop-color="currentColor" stop-opacity="0"></stop><stop offset="100%" stop-color="currentColor" stop-opacity=".55"></stop></linearGradient></defs><g fill="none"><path d="M24 0v24H0V0h24ZM12.593 23.258l-.011.002l-.071.035l-.02.004l-.014-.004l-.071-.035c-.01-.004-.019-.001-.024.005l-.004.01l-.017.428l.005.02l.01.013l.104.074l.015.004l.012-.004l.104-.074l.012-.016l.004-.017l-.017-.427c-.002-.01-.009-.017-.017-.018Zm.265-.113l-.013.002l-.185.093l-.01.01l-.003.011l.018.43l.005.012l.008.007l.201.093c.012.004.023 0 .029-.008l.004-.014l-.034-.614c-.003-.012-.01-.02-.02-.022Zm-.715.002a.023.023 0 0 0-.027.006l-.006.014l-.034.614c0 .012.007.02.017.024l.015-.002l.201-.093l.01-.008l.004-.011l.017-.43l-.003-.012l-.01-.01l-.184-.092Z"></path><path fill="url(#mingcuteLoadingLine0)" d="M8.886.006a1 1 0 0 1 .22 1.988A8.001 8.001 0 0 0 10 17.944v2c-5.523 0-10-4.476-10-10C0 4.838 3.848.566 8.886.007Z" transform="translate(2 2.055)"></path><path fill="url(#mingcuteLoadingLine1)" d="M14.322 1.985a1 1 0 0 1 1.392-.248A9.988 9.988 0 0 1 20 9.945c0 5.523-4.477 10-10 10v-2a8 8 0 0 0 4.57-14.567a1 1 0 0 1-.248-1.393Z" transform="translate(2 2.055)"></path></g>', 2), Wl = [
  Zl
], _l = {
  key: 0,
  d: "M3.707 5.293a1 1 0 00-1.414 1.414l1.414-1.414zM5 8l-.707.707a1 1 0 001.414 0L5 8zm4.707-3.293a1 1 0 00-1.414-1.414l1.414 1.414zm-7.414 2l2 2 1.414-1.414-2-2-1.414 1.414zm3.414 2l4-4-1.414-1.414-4 4 1.414 1.414z"
}, Gl = {
  key: 1,
  d: "M4 8l2-2m0 0l2-2M6 6L4 4m2 2l2 2",
  stroke: "currentColor",
  "stroke-width": "2",
  "stroke-linecap": "round",
  "stroke-linejoin": "round"
}, Kl = {
  name: "USwitch",
  inheritAttrs: !1
}, Yl = /* @__PURE__ */ p({
  ...Kl,
  props: {
    modelValue: { type: [Boolean, String, Number], default: !1 },
    type: { default: "primary" },
    size: { default: "base" },
    loading: { type: Boolean, default: !1 },
    checked: { type: Boolean },
    disabled: { type: Boolean, default: !1 },
    icon: { type: Boolean, default: !1 },
    readonly: { type: Boolean, default: !1 },
    checkedValue: { default: void 0 },
    uncheckedValue: { default: void 0 }
  },
  emits: ["update:modelValue"],
  setup(e, { emit: i }) {
    const l = e, a = E("switch-"), t = x({
      get: () => l.checkedValue && l.modelValue === l.checkedValue ? !0 : l.uncheckedValue && l.modelValue === l.uncheckedValue ? !1 : l.modelValue,
      set: (s) => {
        l.checkedValue && s ? s = l.checkedValue : l.uncheckedValue && !s && (s = l.uncheckedValue), i("update:modelValue", s);
      }
    }), o = {
      success: {
        color: "bg-success-500",
        text: "text-success-500",
        focus: "focus:ring-success-500"
      },
      info: {
        color: "bg-info-500",
        text: "text-info-500",
        focus: "focus:ring-info-500"
      },
      warning: {
        color: "bg-warning-500",
        text: "text-warning-500",
        focus: "focus:ring-warning-500"
      },
      error: {
        color: "bg-error-500",
        text: "text-error-500",
        focus: "focus:ring-error-500"
      },
      primary: {
        color: "bg-primary-500",
        text: "text-primary-500",
        focus: "focus:ring-primary-500"
      },
      secondary: {
        color: "bg-secondary-500",
        text: "text-secondary-500",
        focus: "focus:ring-secondary-500"
      },
      accent: {
        color: "bg-accent-500",
        text: "text-accent-500",
        focus: "focus:ring-accent-500"
      }
    };
    return (s, n) => (r(), u("div", Rl, [
      c("label", {
        for: m(a),
        class: g(["flex select-none items-center", [e.disabled ? "cursor-not-allowed opacity-60" : e.readonly ? "" : "cursor-pointer"]])
      }, [
        c("div", Ol, [
          h(s.$slots, "default")
        ]),
        c("div", ql, [
          L(c("input", z({
            id: m(a),
            "onUpdate:modelValue": n[0] || (n[0] = (d) => N(t) ? t.value = d : null)
          }, s.$attrs, {
            type: "checkbox",
            disabled: e.disabled,
            class: "sr-only"
          }), null, 16, Hl), [
            [te, m(t)]
          ]),
          c("div", {
            class: g(["block rounded-full", [
              m(t) || e.checked ? o[e.type].color : "bg-gray-200",
              {
                "h-4 w-9": e.size === "sm",
                "h-6 w-11": e.size === "base",
                "h-9 w-14": e.size === "lg"
              }
            ]])
          }, null, 2),
          c("div", {
            class: g(["absolute left-0 top-0.5 rounded-full bg-white transition", [
              m(t) || e.checked ? "translate-x-5" : "translate-x-0",
              {
                "h-3 w-3": e.size === "sm",
                "h-5 w-5": e.size === "base",
                "h-8 w-8": e.size === "lg"
              }
            ]])
          }, [
            e.loading ? (r(), u("svg", {
              key: 0,
              class: g(["animate-spin", [
                {
                  "h-3 w-3": e.size === "sm",
                  "h-5 w-5": e.size === "base",
                  "h-8 w-8": e.size === "lg"
                }
              ]]),
              xmlns: "http://www.w3.org/2000/svg",
              width: "32",
              height: "32",
              viewBox: "0 0 24 24"
            }, Wl, 2)) : e.icon ? (r(), u("svg", {
              key: 1,
              fill: "currentColor",
              viewBox: "0 0 12 12",
              class: g([
                e.checked || m(t) ? o[e.type].text : "text-gray-200",
                {
                  "h-3 w-3": e.size === "sm",
                  "h-5 w-5": e.size === "base",
                  "h-8 w-8": e.size === "lg"
                }
              ])
            }, [
              e.checked || m(t) ? (r(), u("path", _l)) : (r(), u("path", Gl))
            ], 2)) : v("", !0)
          ], 2)
        ])
      ], 10, Fl)
    ]));
  }
}), Xl = (e) => (le("data-v-9304c591"), e = e(), ae(), e), Ql = { class: "w-full flex flex-col" }, Jl = { class: "overflow-x-auto -mx-4 -my-2 lg:-mx-8 sm:-mx-6" }, ea = { class: "inline-block min-w-full py-2 align-middle lg:px-8 md:px-6" }, ta = { class: "relative overflow-hidden shadow ring-1 ring-black ring-opacity-5 md:rounded-lg" }, la = {
  key: 0,
  class: "absolute left-12 top-0 z-10 h-12 flex items-center bg-gray-50 sm:left-16 space-x-3"
}, aa = ["disabled", "onClick"], sa = { class: "min-w-full table-fixed overflow-x-auto divide-y divide-gray-300" }, oa = { class: "bg-gray-50" }, na = {
  key: 0,
  scope: "col",
  class: "relative w-12 px-6 sm:w-16 sm:px-8"
}, ia = ["checked", "indeterminate"], ra = { class: "relative overflow-x-auto bg-white divide-y divide-gray-200" }, da = { colspan: 99 }, ua = /* @__PURE__ */ ue('<svg xmlns="http://www.w3.org/2000/svg" width="32" height="32" viewBox="0 0 24 24" data-v-9304c591><rect width="6" height="14" x="1" y="4" fill="#888888" data-v-9304c591><animate id="svgSpinnersBarsScaleFade0" fill="freeze" attributeName="y" begin="0;svgSpinnersBarsScaleFade1.end-0.25s" dur="0.75s" values="1;5" data-v-9304c591></animate><animate fill="freeze" attributeName="height" begin="0;svgSpinnersBarsScaleFade1.end-0.25s" dur="0.75s" values="22;14" data-v-9304c591></animate><animate fill="freeze" attributeName="opacity" begin="0;svgSpinnersBarsScaleFade1.end-0.25s" dur="0.75s" values="1;.2" data-v-9304c591></animate></rect><rect width="6" height="14" x="9" y="4" fill="currentColor" opacity=".4" data-v-9304c591><animate fill="freeze" attributeName="y" begin="svgSpinnersBarsScaleFade0.begin+0.15s" dur="0.75s" values="1;5" data-v-9304c591></animate><animate fill="freeze" attributeName="height" begin="svgSpinnersBarsScaleFade0.begin+0.15s" dur="0.75s" values="22;14" data-v-9304c591></animate><animate fill="freeze" attributeName="opacity" begin="svgSpinnersBarsScaleFade0.begin+0.15s" dur="0.75s" values="1;.2" data-v-9304c591></animate></rect><rect width="6" height="14" x="17" y="4" fill="currentColor" opacity=".3" data-v-9304c591><animate id="svgSpinnersBarsScaleFade1" fill="freeze" attributeName="y" begin="svgSpinnersBarsScaleFade0.begin+0.3s" dur="0.75s" values="1;5" data-v-9304c591></animate><animate fill="freeze" attributeName="height" begin="svgSpinnersBarsScaleFade0.begin+0.3s" dur="0.75s" values="22;14" data-v-9304c591></animate><animate fill="freeze" attributeName="opacity" begin="svgSpinnersBarsScaleFade0.begin+0.3s" dur="0.75s" values="1;.2" data-v-9304c591></animate></rect></svg>', 1), ca = [
  ua
], fa = { key: 0 }, ma = { colspan: 99 }, ga = { class: "min-h-32 flex items-center justify-center" }, ha = {
  key: 1,
  xmlns: "http://www.w3.org/2000/svg",
  width: "32",
  height: "32",
  viewBox: "0 0 24 24"
}, ya = /* @__PURE__ */ Xl(() => /* @__PURE__ */ c("path", {
  fill: "#888888",
  d: "M12 11.997a1.316 1.316 0 1 1 0-2.632a1.316 1.316 0 0 1 0 2.632zm2.916-.021c0-2.828-1.109-5.397-2.916-7.298a10.556 10.556 0 0 0-2.916 7.298c0 1.297.234 2.535.66 3.683c-.618.9-1.074 2.16-1.275 3.616c.639-.767 1.422-1.306 2.292-1.591c.363.555.78 1.096 1.239 1.574c.461-.494.876-1.02 1.239-1.59c.87.271 1.653.826 2.29 1.576c-.199-1.456-.655-2.716-1.275-3.615c.427-1.155.66-2.385.66-3.69l.002.037zM12 22C6.477 22 2 17.523 2 12S6.477 2 12 2s10 4.477 10 10s-4.477 10-10 10zm0-22C5.373 0 0 5.373 0 12s5.373 12 12 12s12-5.373 12-12S18.627 0 12 0z"
}, null, -1)), va = [
  ya
], pa = {
  key: 0,
  class: "relative w-12 px-6 sm:w-16 sm:px-8"
}, ba = {
  key: 0,
  class: "bg-primary-600 absolute inset-y-0 left-0 w-0.5"
}, wa = ["value"], $a = {
  name: "UTable"
}, ka = /* @__PURE__ */ p({
  ...$a,
  props: {
    data: null,
    actions: { default: () => [] },
    loading: { type: Boolean, default: !1 }
  },
  setup(e) {
    const i = e, l = B([]);
    R(() => i.data, () => l.value = []);
    const a = x(() => {
      const t = i.data;
      return t && t.length > 0 && l.value.length > 0 && l.value.length < t.length;
    });
    return (t, o) => {
      var s;
      return r(), u("div", Ql, [
        c("div", Jl, [
          c("div", ea, [
            c("div", ta, [
              l.value.length > 0 ? (r(), u("div", la, [
                (r(!0), u($, null, M(e.actions, (n) => (r(), u("button", {
                  key: n.name,
                  disabled: !l.value.length,
                  class: "focus:ring-primary-500 inline-flex items-center border border-gray-300 rounded bg-white px-2.5 py-1.5 text-xs font-medium text-gray-700 shadow-sm hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2",
                  onClick: (d) => n.clicked(l.value)
                }, w(n.name), 9, aa))), 128))
              ])) : v("", !0),
              c("table", sa, [
                c("thead", oa, [
                  c("tr", null, [
                    (s = e.actions) != null && s.length ? (r(), u("th", na, [
                      c("input", {
                        type: "checkbox",
                        class: "checkbox",
                        checked: e.data.length > 0 && l.value.length === e.data.length,
                        indeterminate: m(a),
                        onChange: o[0] || (o[0] = (n) => l.value = (n == null ? void 0 : n.target).checked ? e.data.map((d) => d.id) : [])
                      }, null, 40, ia)
                    ])) : v("", !0),
                    h(t.$slots, "headers", {}, void 0, !0)
                  ])
                ]),
                c("tbody", ra, [
                  c("tr", {
                    class: g(["absolute h-full w-full flex items-center justify-center", { invisible: !e.loading }])
                  }, [
                    c("td", da, [
                      h(t.$slots, "loading", {}, () => [
                        c("div", {
                          class: g({ "opacity-50": e.loading })
                        }, ca, 2)
                      ], !0)
                    ])
                  ], 2),
                  e.data.length === 0 ? (r(), u("tr", fa, [
                    c("td", ma, [
                      c("div", ga, [
                        t.$slots.empty ? h(t.$slots, "empty", { key: 0 }, void 0, !0) : (r(), u("svg", ha, va))
                      ])
                    ])
                  ])) : (r(!0), u($, { key: 1 }, M(e.data, (n, d) => {
                    var f;
                    return r(), u("tr", {
                      key: n.id,
                      class: g(["duration-300 hover:bg-gray-50", {
                        "bg-gray-50": l.value.includes(n.id),
                        "opacity-70": e.loading
                      }])
                    }, [
                      (f = e.actions) != null && f.length ? (r(), u("td", pa, [
                        l.value.includes(n.id) ? (r(), u("div", ba)) : v("", !0),
                        L(c("input", {
                          "onUpdate:modelValue": o[1] || (o[1] = (y) => l.value = y),
                          value: n.id,
                          type: "checkbox",
                          class: "checkbox"
                        }, null, 8, wa), [
                          [te, l.value]
                        ])
                      ])) : v("", !0),
                      h(t.$slots, "rows", {
                        row: n,
                        index: d
                      }, void 0, !0)
                    ], 2);
                  }), 128))
                ])
              ])
            ])
          ])
        ])
      ]);
    };
  }
});
const xa = /* @__PURE__ */ j(ka, [["__scopeId", "data-v-9304c591"]]), Va = {
  name: "UToast"
}, Ca = /* @__PURE__ */ p({
  ...Va,
  props: {
    show: { type: Boolean },
    position: { default: "top" },
    align: { default: "center" },
    timeout: { default: 2500 },
    queue: { type: Boolean, default: !0 }
  },
  setup(e, { expose: i }) {
    const l = e, a = I({
      events: [],
      success: (t) => a.add(t, "success"),
      info: (t) => a.add(t, "info"),
      warning: (t) => a.add(t, "warning"),
      error: (t) => a.add(t, "error"),
      show: (t, o) => a.add(o, t),
      add: (t, o) => {
        l.queue || (a.events = []), setTimeout(() => {
          const s = { id: Date.now(), content: t, type: o };
          a.events.push(s), setTimeout(() => a.remove(s), l.timeout);
        }, 100);
      },
      remove: (t) => {
        a.events = a.events.filter((o) => o.id !== t.id);
      }
    });
    return i({
      show: a.show,
      success: a.success,
      info: a.info,
      warning: a.warning,
      error: a.error
    }), (t, o) => (r(), u("div", {
      class: g(["fixed z-200 w-4/5 sm:w-96", {
        "left-1/2 -translate-x-1/2": e.align === "center",
        "left-6": e.align === "left",
        "right-6": e.align === "right",
        "top-4": e.position === "top",
        "bottom-6 ": e.position === "bottom"
      }])
    }, [
      T(Me, {
        tag: "ul",
        "enter-active-class": "transition ease-out duration-200",
        "leave-active-class": "transition ease-in duration-200 absolute w-full",
        "enter-class": e.position === "bottom" ? "transform translate-y-3 opacity-0" : "transform -translate-y-3 opacity-0",
        "enter-to-class": "transform translate-y-0 opacity-100",
        "leave-class": "transform translate-y-0 opacity-100",
        "leave-to-class": e.position === "bottom" ? "transform translate-y-1/4 opacity-0" : "transform -translate-y-1/4 opacity-0",
        "move-class": "ease-in-out duration-200",
        class: "inline-block w-full"
      }, {
        default: C(() => [
          (r(!0), u($, null, M(a.events, (s) => (r(), u("li", {
            key: s.id,
            class: g({
              "pb-2": e.position === "bottom",
              "pt-2": e.position === "top"
            })
          }, [
            h(t.$slots, "default", {
              type: s.type
            }, () => [
              T(ce, {
                type: s.type
              }, {
                default: C(() => [
                  A(w(s.content), 1)
                ]),
                _: 2
              }, 1032, ["type"])
            ])
          ], 2))), 128))
        ]),
        _: 3
      }, 8, ["enter-class", "leave-to-class"])
    ], 2));
  }
}), Ba = { class: "flex items-center gap-1 px-2 py-0.5 transition-100 hover:rounded hover:bg-gray-100" }, za = ["onClick"], Sa = /* @__PURE__ */ c("svg", {
  xmlns: "http://www.w3.org/2000/svg",
  fill: "none",
  viewBox: "0 0 24 24",
  "stroke-width": "1.5",
  stroke: "currentColor"
}, [
  /* @__PURE__ */ c("path", {
    "stroke-linecap": "round",
    "stroke-linejoin": "round",
    d: "M19.5 8.25l-7.5 7.5-7.5-7.5"
  })
], -1), Ma = [
  Sa
], Ua = { key: 1 }, Ta = {
  key: 0,
  class: "flex cursor-pointer items-center gap-1 px-2 py-0.5 transition-100"
}, Ia = { key: 1 }, La = {
  name: "UTree"
}, Aa = /* @__PURE__ */ p({
  ...La,
  props: {
    modelValue: { default: null },
    options: { default: () => [] },
    cascade: { type: Boolean, default: !1 },
    selectable: { type: Boolean, default: !1 },
    defaultExpandedKeys: { default: () => [] }
  },
  emits: ["update:modelValue"],
  setup(e, { emit: i }) {
    const l = e, a = B(l.options), t = x({
      get: () => l.modelValue,
      set: (s) => i("update:modelValue", s)
    });
    function o(s) {
      if (!l.cascade)
        return;
      const n = s.target.value;
      a.value.forEach((d) => {
        var f, y;
        d.value === n && (t.value.includes(n) ? (f = d.children) == null || f.forEach((V) => {
          !t.value.includes(V.value) && !V.disabled && t.value.push(V.value);
        }) : (y = d.children) == null || y.forEach((V) => {
          t.value.includes(V.value) && t.value.splice(t.value.indexOf(V.value), 1);
        }));
      });
    }
    return W(() => {
      a.value.forEach((s) => s.hidden = !0), F(() => {
        const s = l.defaultExpandedKeys;
        s.length && a.value.forEach((n) => {
          var d;
          s.includes(n.value) && (n.hidden = !1), (d = n.children) == null || d.forEach((f) => {
            s.includes(f.value) && (n.hidden = !1);
          });
        });
      });
    }), (s, n) => (r(!0), u($, null, M(a.value, (d) => (r(), u("div", {
      key: d.value
    }, [
      c("div", Ba, [
        c("span", {
          class: g(["h-4 w-4 cursor-pointer text-gray-500 transition-100", {
            invisible: !d.children,
            "-rotate-90": d.hidden
          }]),
          onClick: G((f) => d.hidden = !d.hidden, ["stop"])
        }, Ma, 10, za),
        e.selectable ? (r(), S(X, {
          key: 0,
          modelValue: m(t),
          "onUpdate:modelValue": n[0] || (n[0] = (f) => N(t) ? t.value = f : null),
          value: d.value,
          disabled: d.disabled,
          onChange: o
        }, {
          default: C(() => [
            A(w(d.label), 1)
          ]),
          _: 2
        }, 1032, ["modelValue", "value", "disabled"])) : (r(), u("span", Ua, w(d.label), 1))
      ]),
      (r(!0), u($, null, M(d.children, (f) => (r(), u("div", {
        key: f.value,
        class: "pl-10 hover:rounded hover:bg-gray-100"
      }, [
        T(_, null, {
          default: C(() => [
            d.hidden ? v("", !0) : (r(), u("div", Ta, [
              e.selectable ? (r(), S(X, {
                key: 0,
                modelValue: m(t),
                "onUpdate:modelValue": n[1] || (n[1] = (y) => N(t) ? t.value = y : null),
                value: f.value,
                disabled: f.disabled,
                onChange: o
              }, {
                default: C(() => [
                  A(w(f.label), 1)
                ]),
                _: 2
              }, 1032, ["modelValue", "value", "disabled"])) : (r(), u("span", Ia, w(f.label), 1))
            ]))
          ]),
          _: 2
        }, 1024)
      ]))), 128))
    ]))), 128));
  }
}), Na = { class: "w-full px-3" }, Ea = { class: "flex items-center" }, ja = {
  key: 0,
  class: "mr-3 text-gray-600"
}, Pa = ["onClick"], Da = { class: "p-3" }, Ra = {
  name: "UTabs"
}, Fa = /* @__PURE__ */ p({
  ...Ra,
  props: {
    modelValue: { default: null },
    full: { type: Boolean, default: !1 },
    type: { default: "card" }
  },
  emits: ["update:modelValue"],
  setup(e, { emit: i }) {
    var n;
    const l = e;
    Ue("tabs", { value: l.modelValue });
    const a = de(), t = (n = a.default) == null ? void 0 : n.call(a), o = I({
      tab: [],
      activeValue(d, f) {
        if (typeof l.modelValue == "number")
          return f;
        if (typeof l.modelValue == "string")
          return d.value;
      },
      selectTab(d, f) {
        typeof l.modelValue == "number" && i("update:modelValue", f), typeof l.modelValue == "string" && i("update:modelValue", d.value);
      }
    });
    if (t)
      for (let d = 0; d < t.length; d++)
        o.tab.push(t[d].props);
    function s() {
      var d;
      if (a.default) {
        if (typeof l.modelValue == "number")
          return a.default()[l.modelValue];
        if (typeof l.modelValue == "string" && t) {
          for (let f = 0; f < t.length; f++)
            if (((d = t[f].props) == null ? void 0 : d.value) === l.modelValue)
              return a.default()[f];
        }
      }
    }
    return (d, f) => (r(), u("div", Na, [
      c("div", Ea, [
        d.$slots.prefix ? (r(), u("div", ja, [
          h(d.$slots, "prefix", {}, void 0, !0)
        ])) : v("", !0),
        (r(!0), u($, null, M(o.tab, (y, V) => (r(), u("div", {
          key: V,
          class: g(["tab", {
            active: o.activeValue(y, V) === e.modelValue,
            "w-full justify-center": e.type === "flex"
          }]),
          onClick: (b) => o.selectTab(y, V)
        }, [
          c("span", null, w(y == null ? void 0 : y.title), 1),
          c("span", {
            class: g(["ml-1 inline-block h-5 w-5", y == null ? void 0 : y.icon])
          }, null, 2)
        ], 10, Pa))), 128))
      ]),
      c("div", Da, [
        T(s)
      ])
    ]));
  }
});
const Oa = /* @__PURE__ */ j(Fa, [["__scopeId", "data-v-1641114e"]]), qa = {
  name: "UTabPane"
}, Ha = /* @__PURE__ */ p({
  ...qa,
  props: {
    title: { default: "" },
    icon: { default: void 0 },
    value: { default: void 0 }
  },
  setup(e) {
    return (i, l) => (r(), u("div", Y(Te(i.$attrs)), [
      h(i.$slots, "default")
    ], 16));
  }
}), ve = [
  ce,
  De,
  O,
  X,
  Xe,
  tt,
  ot,
  ft,
  Ct,
  Nt,
  Wt,
  Qt,
  sl,
  fl,
  wl,
  Vl,
  jl,
  Dl,
  J,
  Yl,
  xa,
  Q,
  Ca,
  Aa,
  Oa,
  Ha
];
for (const e of ve)
  e.install = (i) => {
    i.component(e.name, e);
  };
function Za(e) {
  ve.forEach((i) => {
    e.component(i.name, i);
  });
}
const _a = {
  install: Za
};
export {
  ce as UAlert,
  De as UBadge,
  O as UButton,
  X as UCheckbox,
  Xe as UCollapse,
  tt as UDivider,
  ot as UDrawer,
  ft as UDropdown,
  Ct as UDynamicTags,
  Nt as UFileInput,
  Wt as UInput,
  Qt as ULoading,
  sl as UModal,
  fl as UPopover,
  wl as UProgress,
  Vl as URadio,
  jl as USelect,
  Dl as USkeleton,
  J as USpin,
  Yl as USwitch,
  Ha as UTabPane,
  xa as UTable,
  Oa as UTabs,
  Q as UTag,
  Ca as UToast,
  Aa as UTree,
  _a as default
};
