export { E as Edition, P as PROPS_VARIABLE_NAME, t as transformDefineProp } from './index-3e1c6df0.js';
import { MagicString } from '@vue-macros/common';
import { TSType, CallExpression, Node } from '@babel/types';

type Impl = (ctx: {
    s: MagicString;
    offset: number;
    resolveTSType(type: TSType): Promise<string[] | undefined>;
}) => {
    walkCall(node: CallExpression, parent: Node): string;
    genRuntimeProps(isProduction: boolean): Promise<string | undefined>;
};
declare function stringifyArray(strs: string[]): string;

declare const kevinEdition: Impl;

declare const johnsonEdition: Impl;

export { Impl, johnsonEdition, kevinEdition, stringifyArray };
