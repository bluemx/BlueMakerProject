import * as vite from 'vite';
import { ModuleNode } from 'vite';
import { PluginContext } from 'rollup';

type ResolveTSFileIdImpl = (id: string, importer: string) => Promise<string | undefined> | string | undefined;
declare function resolveTSFileId(id: string, importer: string): string | Promise<string | undefined> | undefined;
/**
 * @limitation don't node_modules and JavaScript file
 */
declare function resolveTSFileIdNode(id: string, importer: string): string | undefined;
declare function setResolveTSFileIdImpl(impl: ResolveTSFileIdImpl): void;

declare const RollupResolve: () => {
    resolve: (ctx: PluginContext) => ResolveTSFileIdImpl;
    handleHotUpdate: (this: void, ctx: vite.HmrContext) => void | ModuleNode[] | Promise<void | ModuleNode[]>;
};

export { RollupResolve as R, ResolveTSFileIdImpl as a, resolveTSFileIdNode as b, resolveTSFileId as r, setResolveTSFileIdImpl as s };
