import { _ as _sfc_main$3, a as __unplugin_components_3 } from './VTextInput.vue_vue_type_script_setup_true_lang-707de251.js';
import { v as defineComponent, Z as ref, $ as computed, r as resolveComponent, z as unref, o as openBlock, e as createElementBlock, x as createBaseVNode, y as toDisplayString, c as createBlock, h as withCtx, a4 as withModifiers, F as Fragment, i as renderList, g as createCommentVNode, u as createVNode, O as createTextVNode, q as normalizeClass, Q as _sfc_main$4, Y as __unplugin_components_1, a5 as onMounted, a6 as currentRoute, T as router, K as isRef, M as withKeys, a7 as routes } from './index-d1c9f78d.js';
import './VIconTitle.vue_vue_type_script_setup_true_lang-5762ce49.js';
import './VIcon.vue_vue_type_script_setup_true_lang-e30540ed.js';

const _hoisted_1$2 = {
  block: "",
  "cursor-pointer": ""
};
const _hoisted_2$2 = { p2: "" };
const _hoisted_3$2 = ["onSubmit"];
const _hoisted_4$2 = /* @__PURE__ */ createBaseVNode("div", {
  px2: "",
  "text-sm": "",
  op50: ""
}, " Fill params and navigate: ", -1);
const _hoisted_5$2 = {
  flex: "~",
  "items-center": "",
  p2: "",
  "font-mono": "",
  "text-sm": ""
};
const _hoisted_6$2 = { key: 1 };
const _sfc_main$2 = /* @__PURE__ */ defineComponent({
  __name: "RoutePathItem",
  props: {
    route: null
  },
  emits: ["navigate"],
  setup(__props, { emit }) {
    const props = __props;
    function parseExpressRoute(route) {
      return route.split(/(:\w+[\?\*]?)/).filter(Boolean);
    }
    const partsInput = ref([]);
    const parts = computed(() => {
      const _ = parseExpressRoute(props.route.path);
      partsInput.value = Array.from({ length: _.length }, () => "");
      return _;
    });
    const path = computed(() => parts.value.map((i, idx) => i[0] === ":" ? partsInput.value[idx] : i).join("").replace(/\/+/g, "/"));
    const hasWildcard = computed(() => props.route.path.includes(":"));
    function navigate() {
      emit("navigate", path.value);
    }
    return (_ctx, _cache) => {
      const _component_VTextInput = _sfc_main$3;
      const _component_VButton = _sfc_main$4;
      const _component_VDropdown = resolveComponent("VDropdown");
      return !unref(hasWildcard) ? (openBlock(), createElementBlock("button", {
        key: 0,
        onClick: navigate
      }, [
        createBaseVNode("code", null, toDisplayString(__props.route.path), 1)
      ])) : (openBlock(), createBlock(_component_VDropdown, { key: 1 }, {
        popper: withCtx(({ hide }) => [
          createBaseVNode("div", _hoisted_2$2, [
            createBaseVNode("form", {
              flex: "~ col",
              onSubmit: withModifiers(() => {
                navigate();
                hide();
              }, ["prevent"])
            }, [
              unref(hasWildcard) ? (openBlock(), createElementBlock(Fragment, { key: 0 }, [
                _hoisted_4$2,
                createBaseVNode("div", _hoisted_5$2, [
                  (openBlock(true), createElementBlock(Fragment, null, renderList(unref(parts), (part, idx) => {
                    return openBlock(), createElementBlock(Fragment, { key: idx }, [
                      part[0] === ":" ? (openBlock(), createBlock(_component_VTextInput, {
                        key: 0,
                        modelValue: unref(partsInput)[idx],
                        "onUpdate:modelValue": ($event) => unref(partsInput)[idx] = $event,
                        "w-20": "",
                        "n-sm": "",
                        placeholder: part.slice(1)
                      }, null, 8, ["modelValue", "onUpdate:modelValue", "placeholder"])) : (openBlock(), createElementBlock("span", _hoisted_6$2, toDisplayString(part), 1))
                    ], 64);
                  }), 128))
                ])
              ], 64)) : createCommentVNode("", true),
              createVNode(_component_VButton, {
                block: "",
                n: "primary"
              }, {
                default: withCtx(() => [
                  createTextVNode(" Navigate ")
                ]),
                _: 1
              })
            ], 40, _hoisted_3$2)
          ])
        ]),
        default: withCtx(() => [
          createBaseVNode("code", _hoisted_1$2, [
            (openBlock(true), createElementBlock(Fragment, null, renderList(unref(parts), (part, idx) => {
              return openBlock(), createElementBlock("span", {
                key: idx,
                class: normalizeClass(part[0] === ":" ? "text-gray border border-dashed rounded border-gray:50 px1" : "")
              }, toDisplayString(part[0] === ":" ? part.slice(1) : part), 3);
            }), 128))
          ])
        ]),
        _: 1
      }));
    };
  }
});

/* Injected with object hook! */

const _hoisted_1$1 = { "w-full": "" };
const _hoisted_2$1 = /* @__PURE__ */ createBaseVNode("thead", { border: "b base" }, [
  /* @__PURE__ */ createBaseVNode("tr", null, [
    /* @__PURE__ */ createBaseVNode("th", { "text-left": "" }),
    /* @__PURE__ */ createBaseVNode("th", { "text-left": "" }, " Route Path "),
    /* @__PURE__ */ createBaseVNode("th", { "text-left": "" }, " Name ")
  ])
], -1);
const _hoisted_3$1 = {
  "w-20": "",
  "pr-1": ""
};
const _hoisted_4$1 = {
  flex: "",
  "items-center": "",
  "justify-end": ""
};
const _hoisted_5$1 = { "text-sm": "" };
const _hoisted_6$1 = {
  flex: "inline gap3",
  "items-center": ""
};
const _hoisted_7$1 = {
  "w-30": "",
  "ws-nowrap": "",
  "pr-1": "",
  "text-left": "",
  "font-mono": "",
  "text-sm": "",
  op50: ""
};
const _sfc_main$1 = /* @__PURE__ */ defineComponent({
  __name: "RoutesTable",
  props: {
    pages: null,
    matched: null,
    matchedPending: null
  },
  emits: ["navigate"],
  setup(__props) {
    const props = __props;
    const sorted = computed(() => {
      return [...props.pages].sort((a, b) => a.path.localeCompare(b.path));
    });
    return (_ctx, _cache) => {
      const _component_VBadge = __unplugin_components_1;
      const _component_RoutePathItem = _sfc_main$2;
      return openBlock(), createElementBlock("div", null, [
        createBaseVNode("table", _hoisted_1$1, [
          _hoisted_2$1,
          createBaseVNode("tbody", null, [
            (openBlock(true), createElementBlock(Fragment, null, renderList(unref(sorted), (item) => {
              return openBlock(), createElementBlock("tr", {
                key: item.name,
                class: "group",
                "h-7": "",
                border: "b dashed transparent hover:base"
              }, [
                createBaseVNode("td", _hoisted_3$1, [
                  createBaseVNode("div", _hoisted_4$1, [
                    __props.matched.find((m) => m.path === item.path) ? (openBlock(), createBlock(_component_VBadge, {
                      key: 0,
                      "bg-green-400:10": "",
                      "text-green-400": "",
                      title: "active",
                      textContent: "active"
                    })) : createCommentVNode("", true),
                    __props.matchedPending.find((m) => m.path === item.path) ? (openBlock(), createBlock(_component_VBadge, {
                      key: 1,
                      "bg-teal-400:10": "",
                      "text-teal-400": "",
                      title: "next",
                      textContent: "next"
                    })) : createCommentVNode("", true)
                  ])
                ]),
                createBaseVNode("td", _hoisted_5$1, [
                  createBaseVNode("div", _hoisted_6$1, [
                    createVNode(_component_RoutePathItem, {
                      route: item,
                      class: normalizeClass(__props.matched.find((m) => m.path === item.path) ? "text-primary" : __props.matchedPending.find((m) => m.name === item.name) ? "text-teal" : ""),
                      onNavigate: _cache[0] || (_cache[0] = (path) => _ctx.$emit("navigate", path))
                    }, null, 8, ["route", "class"])
                  ])
                ]),
                createBaseVNode("td", _hoisted_7$1, toDisplayString(item.name ?? "-"), 1)
              ]);
            }), 128))
          ])
        ])
      ]);
    };
  }
});

/* Injected with object hook! */

const _hoisted_1 = {
  "h-full": "",
  "of-auto": "",
  "n-panel-grids": ""
};
const _hoisted_2 = {
  border: "b base",
  flex: "~ col gap1",
  px4: "",
  py3: "",
  "navbar-glass": ""
};
const _hoisted_3 = /* @__PURE__ */ createBaseVNode("span", { op50: "" }, "Navigate from ", -1);
const _hoisted_4 = { "font-mono": "" };
const _hoisted_5 = /* @__PURE__ */ createBaseVNode("span", { op50: "" }, " to ", -1);
const _hoisted_6 = {
  key: 1,
  op50: ""
};
const _hoisted_7 = /* @__PURE__ */ createBaseVNode("span", null, [
  /* @__PURE__ */ createTextVNode("Press "),
  /* @__PURE__ */ createBaseVNode("b", { "font-bold": "" }, "Enter"),
  /* @__PURE__ */ createTextVNode(" to navigate")
], -1);
const _hoisted_8 = {
  key: 0,
  "text-orange": "",
  op75: ""
};
const _hoisted_9 = {
  key: 1,
  op50: ""
};
const _sfc_main = /* @__PURE__ */ defineComponent({
  __name: "pages",
  setup(__props) {
    const routeInput = ref("");
    onMounted(() => {
      routeInput.value = currentRoute.value?.path ?? "/";
    });
    const routeInputMatched = computed(() => {
      if (routeInput.value === currentRoute.value?.path)
        return [];
      return router.value?.resolve({
        path: routeInput.value || "/"
      }).matched ?? [];
    });
    function navigate() {
      if (routeInput.value === currentRoute.value?.path)
        return;
      router.value?.push(routeInput.value || "/");
    }
    function navigateToRoute(path) {
      router.value?.push(path);
      routeInput.value = path;
    }
    return (_ctx, _cache) => {
      const _component_VTextInput = _sfc_main$3;
      const _component_RoutesTable = _sfc_main$1;
      const _component_VSectionBlock = __unplugin_components_3;
      return openBlock(), createElementBlock("div", _hoisted_1, [
        createBaseVNode("div", _hoisted_2, [
          createBaseVNode("div", null, [
            unref(currentRoute)?.path !== unref(routeInput) ? (openBlock(), createElementBlock(Fragment, { key: 0 }, [
              _hoisted_3,
              createBaseVNode("span", _hoisted_4, toDisplayString(unref(currentRoute)?.path), 1),
              _hoisted_5
            ], 64)) : (openBlock(), createElementBlock("span", _hoisted_6, "Current route"))
          ]),
          createVNode(_component_VTextInput, {
            modelValue: unref(routeInput),
            "onUpdate:modelValue": _cache[0] || (_cache[0] = ($event) => isRef(routeInput) ? routeInput.value = $event : null),
            "font-mono": "",
            icon: "carbon-direction-right-01 scale-y--100",
            class: normalizeClass(unref(currentRoute)?.path === unref(routeInput) ? "" : unref(routeInputMatched).length ? "text-green" : "text-orange"),
            onKeydown: withKeys(navigate, ["enter"])
          }, null, 8, ["modelValue", "class", "onKeydown"]),
          createBaseVNode("div", null, [
            unref(currentRoute)?.path !== unref(routeInput) ? (openBlock(), createElementBlock(Fragment, { key: 0 }, [
              _hoisted_7,
              !unref(routeInputMatched).length ? (openBlock(), createElementBlock("span", _hoisted_8, " (no match)")) : createCommentVNode("", true)
            ], 64)) : (openBlock(), createElementBlock("span", _hoisted_9, "Edit path above to navigate"))
          ])
        ]),
        createVNode(_component_VSectionBlock, {
          icon: "carbon-tree-view-alt",
          text: "All Routes",
          description: `${unref(routes).length} routes registered in your application`,
          padding: "pr5"
        }, {
          default: withCtx(() => [
            createVNode(_component_RoutesTable, {
              pages: unref(routes),
              matched: unref(currentRoute)?.matched ?? [],
              "matched-pending": unref(routeInputMatched),
              onNavigate: navigateToRoute
            }, null, 8, ["pages", "matched", "matched-pending"])
          ]),
          _: 1
        }, 8, ["description"])
      ]);
    };
  }
});

/* Injected with object hook! */

/* Injected with object hook! */

export { _sfc_main as default };
